var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["add","aheadmainli","algorithm","angular","anyon","app","appcompon","attemp","bare","base","bootstrap","candtleafletcompon","candtleafletservic","chang","check","code","compon","components/app.compon","config","configur","cr","creat","custom","declar","defaultextens","develop","don't","due","enough","exampl","export","feel","follow","fork","format","found","free","genet","go","haven't","help","here","https://elasticrash.github.io/angular.io.mapviewer/exampl","https://elasticrash.github.io/angular.io.mapviewer/example/#/mm","https://elasticrash.github.io/angular.io.mapviewer/example/#/prj","https://elasticrash.github.io/angular.io.mapviewer/example/#/random","https://elasticrash.github.io/angular.io.mapviewer/example/#/simpl","https://github.com/elasticrash/ngx.leaflet.component/wiki","import","includ","index","instal","io","js","l.crs.simpl","leaflet","lib/typescript.j","live","main","make","map","match","meta","mind","modul","much","multi","need","ngmodul","ngx.leaflet.compon","ngx.leaflet.componentsin","npm","npm:ngx.leaflet.compon","packag","plan","plugin.j","problem","provid","pull","readm","regist","request","result","salesman","save","simpl","solv","sourc","star","start","stylesheet","systemj","test","that","thing","time","transpil","travel","tri","ts","typescript","typescript.j","us","usag","v1.x","way","wiki","yourself"],"overview.html":["1","15","5","7","browser","class","compon","inject","interfac","match","out","overview","reset","result","support","svg","zoom"],"modules.html":["match","modul","result"],"components/AttributionControl.html":["actual_compon","angular/cor","attribut","attribution.css","attribution.html","attributioncontrol","attributionmodel","attributionmodel(nul","circl","circleel","circlemarkerel","class","compon","component_templ","console.warn(\"thi","constructor","constructor(mapservic","control","control'},{'nam","defin","direct","dom","element","element'},{'nam","expect","export","file","geojson","geojsonel","group'},{'nam","html","imag","imageoverlayel","import","info","injector","input","l","l.control.attribution(this.options).addto(map","layer","layerel","leaf","leaflet","leafletel","leafletgroup","legend","map","map/attribution/attribution.t","map/attribution/attribution.ts:15","map/attribution/attribution.ts:20","mapservic","marker","markerel","match","metadata","method","models/attributionmodel","module.id.tostr","moduleid","n","name","new","ngoninit","node","option","overlay","parent","polygon","polygonel","polylin","polylineel","popup","popupel","privat","render","result","return","scale","scalecontrol","selector","services/map.servic","sourc","styleurl","templateurl","this.leafletel","this.mapservice.getmap","tree","type","var","void","watermark","watermarkcompon","zoom","zoomcontrol"],"components/CircleElement.html":["0","1.1","20","52.6","actual_compon","add","angular/cor","attribut","attributioncontrol","check","circl","circle.css","circle.html","circle/circle.t","circle/circle.ts:21","circle/circle.ts:22","circle/circle.ts:23","circle/circle.ts:24","circle/circle.ts:25","circle/circle.ts:26","circle/circle.ts:27","circle/circle.ts:39","circle/circle.ts:61","circleel","circlemarkerel","class","compon","component_templ","console.warn(\"thi","constructor","constructor(mapservic","control","control'},{'nam","coordinatehandl","default","defin","direct","dom","element","element'},{'nam","elementref","elementtext","exist","expect","export","extend","file","geojson","geojsonel","group","group'},{'nam","group/group","groupservic","helpers/coodinatehandl","html","imag","imageoverlayel","import","info","inheritedopt","inject","injector","input","interfaces/path","ipath","l","l.circle([this.lat","lat","layer","layerel","leaf","leaflet","leafletel","leafletgroup","legend","lon","map","map/map","mapservic","marker","markerel","match","metadata","method","models/path","module.id.tostr","moduleid","mouseov","n","name","new","ngafterviewinit","ngoninit","node","null","number","onclick","option","overlay","parent","path","path(nul","path(this.opt","polygon","polygonel","polylin","polylineel","popup","popupel","popupservic","privat","properti","radiu","render","result","return","scale","scalecontrol","selector","services/group.servic","services/map.servic","services/popup.servic","sourc","string","styleurl","super","super.assigncartesianpointtoleafletslatlngschema","super.transformpointcoordinates(this.leafletelement.cr","templat","templateurl","textinput","textnod","textnode.nodevalu","this.circl","this.circle.addto(map","this.elementtext.nativeelement.childnodes.length","this.elementtext.nativeelement.childnodes[0","this.groupservice.addolayerstogroup(this.circl","this.leafletel","this.leafletgroup","this.lon","this.mapservic","this.mapservice.getmap","this.onclick","this.popupservice.enablepopup(this.mouseov","this.radiu","tree","two","type","undefin","valu","var","void","watermark","watermarkcompon","zoom","zoomcontrol"],"components/CircleMarkerElement.html":["0","1.1","52.6","actual_compon","add","angular/cor","attribut","attributioncontrol","check","circl","circleel","circlemarker.css","circlemarker.html","circlemarker/circlemarker.t","circlemarker/circlemarker.ts:21","circlemarker/circlemarker.ts:22","circlemarker/circlemarker.ts:23","circlemarker/circlemarker.ts:24","circlemarker/circlemarker.ts:25","circlemarker/circlemarker.ts:26","circlemarker/circlemarker.ts:38","circlemarker/circlemarker.ts:59","circlemarkerel","class","compon","component_templ","console.warn(\"thi","constructor","constructor(mapservic","control","control'},{'nam","coordinatehandl","default","defin","direct","dom","element","element'},{'nam","elementposit","elementref","elementtext","exist","expect","export","extend","file","geojson","geojsonel","group","group'},{'nam","group/group","groupservic","helpers/coodinatehandl","html","imag","imageoverlayel","import","info","inheritedopt","inject","injector","input","interfaces/path","ipath","l","l.circlemarker([this.lat","lat","layer","layerel","leaf","leaflet","leafletel","leafletgroup","legend","lon","map","map/map","mapservic","marker","markerel","match","metadata","method","models/path","module.id.tostr","moduleid","mouseov","n","name","new","ngafterviewinit","ngoninit","node","null","number","onclick","option","overlay","parent","path","path(nul","path(this.opt","polygon","polygonel","polylin","polylineel","popup","popupel","popupservic","privat","properti","render","result","return","scale","scalecontrol","selector","services/group.servic","services/map.servic","services/popup.servic","sourc","string","styleurl","super","super.assigncartesianpointtoleafletslatlngschema","super.transformpointcoordinates(this.leafletelement.cr","templat","templateurl","textinput","textnod","textnode.nodevalu","this.circl","this.circle.addto(map","this.elementtext.nativeelement.childnodes.length","this.elementtext.nativeelement.childnodes[0","this.groupservice.addolayerstogroup(this.circl","this.leafletel","this.leafletgroup","this.lon","this.mapservic","this.mapservice.getmap","this.onclick","this.popupservice.enablepopup(this.mouseov","tree","two","type","undefin","valu","var","void","watermark","watermarkcompon","zoom","zoomcontrol"],"components/GeoJsonElement.html":["actual_compon","angular/cor","attribut","attributioncontrol","check","circl","circleel","circlemarkerel","class","compon","component_templ","console.warn(\"geojson","console.warn(\"thi","constructor","constructor(mapservic","control","control'},{'nam","defin","direct","dom","element","element'},{'nam","exist","expect","export","extend","fals","file","fill","geojson","geojson.css","geojson.html","geojson/geojson.t","geojson/geojson.ts:21","geojson/geojson.ts:22","geojson/geojson.ts:35","geojson/geojson.ts:60","geojsoncoordinatehandl","geojsonel","gjson","gjson.addto(map","globalid","group","group'},{'nam","group/group","groupservic","guidservic","helpers/geojsonread","helperservic","html","imag","imageoverlayel","import","info","inject","injector","input","l","l.geojson(this.geojson","layer","layerel","leaf","leaflet","leafletel","leafletgroup","legend","map","map/map","mapservic","marker","markerel","match","metadata","method","module.id.tostr","moduleid","n","name","ngdocheck","ngoninit","node","object","object.assign","option","originalobject","overlay","parent","polygon","polygonel","polylin","polylineel","popup","popupel","popupservic","privat","properti","render","result","return","scale","scalecontrol","seem","selector","services/globalid.servic","services/group.servic","services/helper.servic","services/map.servic","services/popup.servic","shouldn't","sourc","string","styleurl","super","super.transformjsoncoordinates(this.geojson","templateurl","this.geojson","this.globalid","this.groupservice.addolayerstogroup(gjson","this.guidservice.newguid","this.leafletel","this.leafletelement.cr","this.leafletgroup","this.mapservic","this.mapservice.getmap","tree","two","undefin","var","void","watermark","watermarkcompon","zoom","zoomcontrol"],"components/ImageOverlayElement.html":["1","1021.5","1023","25","26.5","actual_compon","angular/cor","attribut","attributioncontrol","basemap","bound","circl","circleel","circlemarkerel","class","compon","component_templ","constructor","constructor(mapservic","constructor(priv","control","control'},{'nam","coordinatehandl","default","defin","direct","dom","element","element'},{'nam","export","extend","file","geojson","geojsonel","group'},{'nam","helpers/coodinatehandl","html","imag","imageoverlay/imag","imageoverlayel","imagepath","import","info","input","l","l.imageoverlay(this.imagepath","latlng","layer","layer.addto(map","layerel","leaf","leaflet","leafletel","leafletgroup","legend","map","map/map","mapservic","marker","markerel","match","metadata","method","module.id.tostr","moduleid","name","ngoninit","null","number","opac","option","overlay","overlay.css","overlay.html","overlay.t","overlay.ts:16","overlay.ts:17","overlay.ts:18","overlay.ts:19","overlay.ts:20","overlay.ts:21","overlay.ts:28","polygon","polygonel","polylin","polylineel","popup","popupel","privat","properti","result","return","scale","scalecontrol","selector","services/map.servic","sourc","string","styleurl","super","super.transformarraycoordinates(this.leafletelement.cr","templateurl","this.bound","this.bounds).setopacity(this.opac","this.latlng","this.leafletel","this.mapservice.addbasemap(lay","this.mapservice.addoverlay(lay","this.mapservice.getmap","this.nam","this.typ","tree","type","valu","var","void","watermark","watermarkcompon","zoom","zoomcontrol"],"components/LayerElement.html":["1","actual_compon","angular/cor","attribut","attributioncontrol","basemap","circl","circleel","circlemarkerel","class","compon","component_templ","constructor","constructor(mapservic","constructor(priv","control","control'},{'nam","default","defin","direct","dom","element","element'},{'nam","export","file","geojson","geojsonel","group'},{'nam","html","imag","imageoverlayel","import","info","input","l","l.tilelayer(this.slippylay","l.tilelayer.wms(this.wmslay","layer","layer.addto(map","layer.css","layer.html","layer/layer.t","layer/layer.ts:14","layer/layer.ts:15","layer/layer.ts:16","layer/layer.ts:17","layer/layer.ts:18","layer/layer.ts:19","layer/layer.ts:24","layerel","leaf","leaflet","leafletel","leafletgroup","legend","map","mapservic","marker","markerel","match","metadata","method","module.id.tostr","moduleid","name","ngoninit","null","number","opac","overlay","polygon","polygonel","polylin","polylineel","popup","popupel","result","return","scale","scalecontrol","selector","services/map.servic","setopacity(this.opac","slippylay","sourc","string","styleurl","templateurl","this.attribut","this.mapservice.addbasemap(lay","this.mapservice.addoverlay(lay","this.mapservice.getmap","this.mapservice.increasenumb","this.nam","this.slippylay","this.typ","this.wmslay","tree","type","valu","var","void","watermark","watermarkcompon","wmslayer","zoom","zoomcontrol"],"components/LeafletElement.html":["1.1","12","19","4","52.6","actual_compon","angular/cor","attribut","attributioncontrol","boolean","center","childrent","circl","circleel","circlemarkerel","class","closepopuponclick","compon","component_templ","console.warn(\"someth","constructor","constructor(mapservic","constructor(priv","control","control'},{'nam","coordinatehandl","cr","default","defin","direct","dom","element","element'},{'nam","elementref","epsg3857","eventemitt","export","extend","fals","file","geojson","geojsonel","group'},{'nam","helpers/coodinatehandl","html","imag","imageoverlayel","import","info","input","l","l.control.layers(this.mapservice.getbasemap","l.crs.epsg3857","l.latlng(this.lat","l.latlngbound","l.map(this.mapelement.nativeel","l[splitcrs[1]][splitcrs[2","lat","latlngbound","layer","layercontrol","layercontrolobject","layerel","leaf","leaflet","leafletel","leafletgroup","legend","lon","map","map.css","map.html","map/map.t","map/map.ts:15","map/map.ts:16","map/map.ts:17","map/map.ts:18","map/map.ts:19","map/map.ts:20","map/map.ts:21","map/map.ts:22","map/map.ts:23","map/map.ts:24","map/map.ts:26","map/map.ts:32","map/map.ts:66","map/map.ts:69","mapel","mapservic","marker","markerel","match","maxbound","maxzoom","metadata","method","minzoom","module.id.tostr","moduleid","name","ngafterviewinit","ngoninit","null","number","overlay","polygon","polygonel","polylin","polylineel","popup","popupel","properti","provid","result","return","revert","right","scale","scalecontrol","selector","services/map.servic","set","setlayercontrol","sourc","splitcr","splitcrs[0","string","styleurl","super","super.assigncartesianpointtoleafletslatlngschema","super.transformpointcoordinates(this.cr","templat","templateurl","this.cr","this.crs.split","this.layercontrol","this.layercontrolobject","this.layercontrolobject.getcontainer().innerhtml","this.lon","this.mapelement.nativeelement.mymapproperti","this.mapservice.getmap","this.mapservice.getoverlays()).addto(map","this.mapservice.setlayercontrol(this.layercontrol","this.mapservice.setmap(map","this.maxbound","this.maxzoom","this.minzoom","this.zoom","this.zoomcontrol","tree","type","typeof","valu","var","variabl","viewchild","viewchild('map","void","watermark","watermarkcompon","zoom","zoomcontrol"],"components/LeafletGroup.html":["actual_compon","angular/cor","attribut","attributioncontrol","circl","circleel","circlemarkerel","class","compon","component_templ","constructor","constructor(mapservic","control","control'},{'nam","defin","direct","dom","element","element'},{'nam","export","file","geojson","geojsonel","globalid","group","group'},{'nam","group.css","group.html","group/group.t","group/group.ts:17","group/group.ts:18","group/group.ts:26","group/group.ts:29","groupservic","guidservic","html","imag","imageoverlayel","import","info","input","l","layer","layerel","leaf","leaflet","leafletel","leafletgroup","legend","mapservic","marker","markerel","match","metadata","method","module.id.tostr","moduleid","name","ngafterviewinit","ngoninit","overlay","polygon","polygonel","polylin","polylineel","popup","popupel","privat","properti","provid","result","return","scale","scalecontrol","selector","services/globalid.servic","services/group.servic","services/map.servic","sourc","string","styleurl","templateurl","this.guidservice.newguid","tree","type","var","void","watermark","watermarkcompon","zoom","zoomcontrol"],"components/MarkerElement.html":["0","1","1.1","2","52.6","actual_compon","ad","add","angular/cor","angular/http","application/x","attribut","attributioncontrol","callback","callback(fals","callback(tru","catch((error","circl","circleel","circlemarkerel","class","compon","component_templ","console.log(err","console.warn(\"thi","constructor","constructor(mapservic","content","control","control'},{'nam","coordinatehandl","createmarkerlay","createmarkerlayer(mark","default","defin","direct","directli","document.createelement(\"img","dom","element","element'},{'nam","elementref","elementtext","err","error","exist","expect","export","extend","file","fileread","form","function","geojson","geojsonel","getimag","group","group'},{'nam","group/group","groupservic","header","helpers/coodinatehandl","html","http","icon","iconanchor","icons","iconurl","imag","imageexist","imageexists(url","imageoverlayel","img","img.height","img.onerror","img.onload","img.src","img.width","import","info","injector","input","l","l.icon","l.marker([model.lat","l.marker([this.lat","lat","layer","layerel","leaf","leaflet","leafletel","leafletgroup","legend","lon","map","map((r","map/map","mapservic","marker","marker.addto(map","marker.css","marker.html","marker/marker.t","marker/marker.ts:105","marker/marker.ts:112","marker/marker.ts:24","marker/marker.ts:25","marker/marker.ts:26","marker/marker.ts:27","marker/marker.ts:28","marker/marker.ts:29","marker/marker.ts:42","marker/marker.ts:87","markerel","match","metadata","method","model","model.createmarkerlayer(model.mark","model.getimage().subscrib","model.iconurl","model.lon","model.mark","module.id.tostr","moduleid","mouseov","myicon","n","name","new","ngoninit","node","null","number","obj","observ","observable.throw('serv","onclick","option","overlay","parent","polygon","polygonel","polylin","polylineel","popup","popupanchor","popupel","popupservic","privat","properti","provid","re","reader","reader.onload","reader.readasdataurl(image.blob","reader.result","render","request","requestmethod","requestopt","respons","responsecontenttyp","responsecontenttype.blob","responsetyp","result","return","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/rx","scale","scalecontrol","selector","services/group.servic","services/map.servic","services/popup.servic","sourc","string","styleurl","super","super.assigncartesianpointtoleafletslatlngschema","super.transformpointcoordinates(this.leafletelement.cr","templat","templateurl","textinput","textnod","textnode.nodevalu","this.createmarkerlayer(this.mark","this.elementtext.nativeelement.childnodes.length","this.elementtext.nativeelement.childnodes[0","this.groupservice.addolayerstogroup(mark","this.http.get(this.iconurl","this.iconurl","this.imageexists(this.iconurl","this.leafletel","this.leafletgroup","this.lon","this.mapservic","this.mapservice.getmap","this.mark","this.onclick","this.popupservice.enablepopup(this.mouseov","tree","type","undefin","url","urlencod","valu","var","void","watermark","watermarkcompon","window.url.createobjecturl(image.blob","www","zoom","zoomcontrol"],"components/PolygonElement.html":["0","1.15","1.155","1.16","1.161","1.179","1.189","1.19","1.2","52.645","52.65","52.66","52.665","52.686","52.687","52.696","52.697","actual_compon","add","angular/cor","attribut","attributioncontrol","boolean","check","circl","circleel","circlemarkerel","class","compon","component_templ","console.warn(\"thi","constructor","constructor(mapservic","control","control'},{'nam","coordinatehandl","default","defin","direct","dom","element","element'},{'nam","elementref","elementtext","exist","expect","export","extend","fals","file","geojson","geojsonel","globalid","group","group'},{'nam","group/group","groupservic","guidservic","helpers/coodinatehandl","helperservic","html","imag","imageoverlayel","import","info","inheritedopt","inject","injector","input","interfaces/path","ipath","l","l.polygon([this.latlng","latlng","layer","layerel","leaf","leaflet","leafletel","leafletgroup","legend","map","map.removelayer(this.polygon","map/map","mapservic","marker","markerel","match","metadata","method","models/path","module.id.tostr","moduleid","mouseov","n","name","new","ngafterviewinit","ngdocheck","ngoninit","node","null","onclick","option","originalobject","overlay","parent","part","path","path(nul","path(this.opt","polygon","polygon.css","polygon.html","polygon/polygon.t","polygon/polygon.ts:23","polygon/polygon.ts:25","polygon/polygon.ts:26","polygon/polygon.ts:27","polygon/polygon.ts:28","polygon/polygon.ts:29","polygon/polygon.ts:30","polygon/polygon.ts:44","polygon/polygon.ts:65","polygon/polygon.ts:76","polygonel","polylin","polylineel","popup","popupel","popupservic","privat","properti","render","result","return","same","scale","scalecontrol","selector","services/globalid.servic","services/group.servic","services/helper.servic","services/map.servic","services/popup.servic","sourc","string","styleurl","super","super.assigncartesianarraytoleafletslatlngschema","super.transformarraycoordinates(this.leafletelement.cr","templat","templateurl","textinput","textnod","textnode.nodevalu","this.elementtext.nativeelement.childnodes.length","this.elementtext.nativeelement.childnodes[0","this.globalid","this.groupservice.addolayerstogroup(this.polygon","this.guidservice.newguid","this.helperservice.arraycompare(this.originalobject","this.latlng","this.leafletel","this.leafletgroup","this.mapservic","this.mapservice.getmap","this.onclick","this.originalobject","this.polygon","this.polygon.addto(map","this.popupservice.enablepopup(this.mouseov","tree","true","two","type","undefin","valu","var","void","watermark","watermarkcompon","zoom","zoomcontrol"],"components/PolylineElement.html":["0","1.1","1.105","1.109","52.6","52.605","52.606","52.697","actual_compon","add","angular/cor","attribut","attributioncontrol","boolean","check","circl","circleel","circlemarkerel","class","compon","component_templ","console.warn(\"thi","constructor","constructor(mapservic","control","control'},{'nam","coordinatehandl","default","defin","direct","dom","element","element'},{'nam","elementref","elementtext","exist","expect","export","extend","fals","file","fill","geojson","geojsonel","globalid","group","group'},{'nam","group/group","groupservic","guidservic","helpers/coodinatehandl","helperservic","html","imag","imageoverlayel","import","info","inheritedopt","inject","injector","input","interfaces/path","ipath","l","l.polyline(this.latlng","latlng","layer","layerel","leaf","leaflet","leafletel","leafletgroup","legend","map","map.removelayer(this.polylin","map/map","mapservic","marker","markerel","match","metadata","method","models/path","module.id.tostr","moduleid","mouseov","n","name","new","ngafterviewinit","ngdocheck","ngoninit","node","null","onclick","option","originalobject","overlay","parent","part","path","path(nul","path(this.opt","polygon","polygonel","polylin","polyline.css","polyline.html","polyline/polyline.t","polyline/polyline.ts:22","polyline/polyline.ts:23","polyline/polyline.ts:24","polyline/polyline.ts:25","polyline/polyline.ts:26","polyline/polyline.ts:27","polyline/polyline.ts:28","polyline/polyline.ts:42","polyline/polyline.ts:65","polyline/polyline.ts:76","polylineel","popup","popupel","popupservic","privat","properti","render","result","return","same","scale","scalecontrol","selector","services/globalid.servic","services/group.servic","services/helper.servic","services/map.servic","services/popup.servic","shouldn't","sourc","string","styleurl","super","super.assigncartesianarraytoleafletslatlngschema","super.transformarraycoordinates(this.leafletelement.cr","templat","templateurl","textinput","textnod","textnode.nodevalu","this.elementtext.nativeelement.childnodes.length","this.elementtext.nativeelement.childnodes[0","this.globalid","this.groupservice.addolayerstogroup(this.polylin","this.guidservice.newguid","this.helperservice.arraycompare(this.originalobject","this.latlng","this.leafletel","this.leafletgroup","this.mapservic","this.mapservice.getmap","this.onclick","this.options.fil","this.originalobject","this.polylin","this.polyline.addto(map","this.popupservice.enablepopup(this.mouseov","tree","true","two","type","undefin","valu","var","void","watermark","watermarkcompon","zoom","zoomcontrol"],"components/PopupElement.html":["1.9","52.6","actual_compon","angular/cor","attribut","attributioncontrol","autoclos","check","circl","circleel","circlemarkerel","class","compon","component_templ","console.warn(\"thi","constructor","constructor(mapservic","content","control","control'},{'nam","coordinatehandl","default","defin","direct","dom","element","element'},{'nam","exist","expect","export","extend","fals","file","geojson","geojsonel","group","group'},{'nam","group/group","groupservic","helpers/coodinatehandl","html","imag","imageoverlayel","import","info","inject","injector","input","keepinview","l","l.popup","lat","layer","layerel","leaf","leaflet","leafletel","leafletgroup","legend","lon","map","map/map","mapservic","marker","markerel","match","metadata","method","module.id.tostr","moduleid","n","name","ngoninit","nice","node","number","option","overlay","parent","polygon","polygonel","polylin","polylineel","popup","popup.addto(map","popup.css","popup.html","popup/popup.t","popup/popup.ts:18","popup/popup.ts:19","popup/popup.ts:20","popup/popup.ts:30","popupel","privat","render","result","return","scale","scalecontrol","selector","services/group.servic","services/map.servic","setlatlng([this.lat","sourc","string","styleurl","super","super.assigncartesianpointtoleafletslatlngschema","super.transformpointcoordinates(this.leafletelement.cr","templateurl","this.groupservice.addolayerstogroup(popup","this.leafletel","this.leafletgroup","this.lon]).setcontent(this.cont","this.mapservic","this.mapservice.getmap","tree","true","two","type","valu","var","void","watermark","watermarkcompon","zoom","zoomcontrol"],"components/ScaleControl.html":["actual_compon","angular/cor","attribut","attributioncontrol","circl","circleel","circlemarkerel","class","compon","component_templ","console.warn(\"thi","constructor","constructor(mapservic","control","control'},{'nam","defin","direct","dom","element","element'},{'nam","expect","export","file","geojson","geojsonel","group'},{'nam","html","imag","imageoverlayel","import","info","injector","input","l","l.control.scale(this.options).addto(map","layer","layerel","leaf","leaflet","leafletel","leafletgroup","legend","map","map/scale/scale.t","map/scale/scale.ts:15","map/scale/scale.ts:21","mapservic","marker","markerel","match","metadata","method","models/scalemodel","module.id.tostr","moduleid","n","name","new","ngoninit","node","option","overlay","parent","polygon","polygonel","polylin","polylineel","popup","popupel","privat","render","result","return","scale","scale.css","scale.html","scalecontrol","scalemodel","scalemodel(nul","selector","services/map.servic","sourc","styleurl","templateurl","this.leafletel","this.mapservice.getmap","tree","type","var","void","watermark","watermarkcompon","zoom","zoomcontrol"],"components/WatermarkComponent.html":["200px","actual_compon","angular/cor","attribut","attributioncontrol","circl","circleel","circlemarkerel","class","compon","component_templ","constructor","control","control'},{'nam","defin","direct","dom","element","element'},{'nam","export","file","function","geojson","geojsonel","group'},{'nam","html","imag","imageoverlayel","img","img.src","img.style.width","import","info","input","l","l.control.extend","l.control['watermark","l.control['watermark'](opt","l.domutil.create('img","layer","layerel","leaf","leaflet","leafletel","leafletgroup","legend","map","map/watermark/watermark.t","map/watermark/watermark.ts:12","map/watermark/watermark.ts:16","marker","markerel","match","metadata","method","module.id","moduleid","name","new","ngoninit","onadd","onremov","opt","overlay","polygon","polygonel","polylin","polylineel","popup","popupel","result","return","scale","scalecontrol","selector","self","self.watermarkurl","sourc","string","styleurl","templateurl","this.watermarkurl","tree","type","var","void","watermark","watermark.css","watermark.html","watermarkcompon","watermarkurl","zoom","zoomcontrol"],"components/ZoomControl.html":["actual_compon","angular/cor","attribut","attributioncontrol","circl","circleel","circlemarkerel","class","compon","component_templ","console.warn(\"thi","constructor","constructor(mapservic","control","control'},{'nam","defin","direct","dom","element","element'},{'nam","expect","export","file","geojson","geojsonel","group'},{'nam","html","imag","imageoverlayel","import","info","injector","input","l","l.control.zoom(this.options).addto(map","layer","layerel","leaf","leaflet","leafletel","leafletgroup","legend","map","map/zoom/zoom.t","map/zoom/zoom.ts:15","map/zoom/zoom.ts:21","mapservic","marker","markerel","match","metadata","method","models/zoommodel","module.id.tostr","moduleid","n","name","new","ngoninit","node","option","overlay","parent","polygon","polygonel","polylin","polylineel","popup","popupel","privat","render","result","return","scale","scalecontrol","selector","services/map.servic","sourc","styleurl","templateurl","this.leafletel","this.mapservice.getmap","tree","type","var","void","watermark","watermarkcompon","zoom","zoom.css","zoom.html","zoomcontrol","zoommodel","zoommodel(nul"],"injectables/GroupService.html":["0","1","addolayerstogroup","addolayerstogroup(overlay","angular/cor","array","boolean","class","constructor","constructor(guidservic","constructor(priv","default","defin","export","fals","file","getgroup","getlayergroup","getlayernumb","getobservablegroup","gid","group","group.globalid","group.nam","groupservic","guidservic","import","info","inject","l","l.layergroup(this.getlayergroup","layergroup","layergroupnumb","layerid","leaflet","map","map.removelayer(this.group","mapservic","mapservice.addoverlay(this.getgroup","match","method","number","object.keys(this.group).length","observ","observable.create(observ","observer.complet","observer.next(group","overlay","privat","properti","public","replac","result","return","rxjs/rx","services/globalid.servic","services/group.service.t","services/group.service.ts:10","services/group.service.ts:11","services/group.service.ts:12","services/group.service.ts:16","services/group.service.ts:47","services/group.service.ts:55","services/group.service.ts:59","services/group.service.ts:63","services/group.service.ts:9","sourc","string","this.getgroup","this.group","this.group.addlayer(overlay","this.group.addto(map","this.guidservice.newguid","this.layergroup","this.layergroup.push(overlay","this.layergroup[this.layerid.indexof(gid","this.layergroupnumb","this.layerid.indexof(gid","this.layerid.push(gid","valu","var","void"],"injectables/GuidService.html":["0","0x3","0x8","16","4xxx","angular/cor","c","class","constructor","defin","export","file","function","guidservic","import","info","inject","match","math.random","method","newguid","r","result","return","services/globalid.service.t","services/globalid.service.ts:5","services/globalid.service.ts:9","sourc","v","v.tostring(16","var","void","x","xxxx","xxxxxxxx","xxxxxxxxxxxx'.replace(/[xy]/g","yxxx"],"injectables/HelperService.html":["a.length","a[i","angular/cor","array","arraycompar","arraycompare(a","b","b.length","b[i","check","class","constructor","defin","don't","export","fals","file","forget","helperservic","import","info","inject","instanceof","match","method","result","return","services/helper.service.t","services/helper.service.ts:5","services/helper.service.ts:9","sourc","this.arraycompare(a[i","true","var","void"],"injectables/MapService.html":["0","1","add","addbasemap","addbasemap(basemap","addcontrol","addoverlay","addoverlay(overlay","angular/cor","arr","arr[index","array","basemap","boolean","class","constructor","default","defin","element._leaflet_id","existing_nam","export","fals","file","getbasemap","getlayercontrol","getlayernumb","getmap","getobservablebasemap","getobservableoverlay","getoverlay","getuniquenam","getuniquename(nam","gid","group","groupidentifi","groupnam","import","increasenumb","index","info","inject","instanceof","key","l","l.control.layers(this.getbasemap","layer","layercontrolflag","layercontrolobject","layersincontrolnumb","leaflet","map","map.removecontrol(this.layercontrolobject","mapservic","match","method","name","name.indexof","name.split('(')[0","nameindex","newnam","number","object.keys(this.layercontrolobject).length","observ","observable.create(observ","observer.complet","observer.next(this.basemap","observer.next(this.overlay","overlay","overlays[key","overlays[key].foreach((el","parseint(name.split('(')[1].split(')')[0","privat","properti","public","refreshoverlay","refreshoverlays(remov","remove._leaflet_id","result","return","rxjs/rx","services/map.service.t","services/map.service.ts:10","services/map.service.ts:100","services/map.service.ts:107","services/map.service.ts:11","services/map.service.ts:12","services/map.service.ts:120","services/map.service.ts:124","services/map.service.ts:128","services/map.service.ts:13","services/map.service.ts:14","services/map.service.ts:15","services/map.service.ts:19","services/map.service.ts:22","services/map.service.ts:26","services/map.service.ts:29","services/map.service.ts:33","services/map.service.ts:45","services/map.service.ts:58","services/map.service.ts:8","services/map.service.ts:85","services/map.service.ts:89","services/map.service.ts:9","services/map.service.ts:93","setlayercontrol","setlayercontrol(st","setmap","setmap(map","sourc","state","string","this.addbasemap(basemap","this.addcontrol","this.addoverlay(overlay","this.basemap","this.basemaps[nam","this.getmap","this.getoverlay","this.getoverlays()).addto(map","this.getuniquename(nam","this.groupidentifiers.indexof(gid","this.groupidentifiers.push(gid","this.groupnames.indexof(nam","this.groupnames.push(nam","this.groupnames[index","this.layercontrolflag","this.layercontrolobject","this.layercontrolobject.getcontainer().innerhtml","this.layersincontrolnumb","this.map","this.overlay","this.overlays[existing_nam","this.overlays[nam","undefin","unknown","valu","var","void"],"injectables/PopupService.html":["angular/cor","class","console.warn('y","constructor","defin","depress","element","element.bindpopup(mouseov","element.bindpopup(onclick","element.bindpopup(text","element.on('click","element.on('mouseov","enablepopup","enablepopup(mouseov","export","file","function","go","import","info","inject","match","method","mouseov","on('mouseout","onclick","popupservic","public","result","return","same","services/popup.service.t","services/popup.service.ts:5","services/popup.service.ts:9","sourc","text","this.closepopup","this.openpopup","time","true","undefin","us","void"],"classes/CoordinateHandler.html":["0","angular/cor","arr","assigncartesianarraytoleafletslatlngschema","assigncartesianarraytoleafletslatlngschema(arr","assigncartesianpointtoleafletslatlngschema","class","constructor","coordinatehandl","defin","export","file","helpers/coodinatehandler.t","helpers/coodinatehandler.ts:14","helpers/coodinatehandler.ts:24","helpers/coodinatehandler.ts:41","helpers/coodinatehandler.ts:58","helpers/coodinatehandler.ts:63","helpers/coodinatehandler.ts:9","import","info","input","lat","latlng","lon","match","method","number","result","return","setnewlatlng","setnewlatlng(newlatlng","sourc","this.i","this.lat","this.lon","this.x","this.xi","transformarraycoordin","transformarraycoordinates(cr","transformpointcoordin","transformpointcoordinates(cr","undefin","var","void","x","xy","y"],"classes/GeoJSONCoordinateHandler.html":["3857","4326","7","agre","angular/cor","class","constructor","coordin","cr","crs.code","crs.unproject","default","defin","doesn't","doesnt","don't","epsg:3857","everywher","export","extend","extens","featur","featurecollect","featurecollection.features.foreach(featur","file","fix","gener","geojson","geojson.typ","geojsoncoordinatehandl","geojsonfeatur","geojsonfeaturecollect","geojsongeometrycollect","geojsonlinestr","geojsonmultilinestr","geojsonmultipoint","geojsonmultipolygon","geojsonpoint","geojsonpolygon","geometrycollect","geometrycollection.geometries.foreach(geometri","global","handi","handl","helpers/geojsonreader.t","helpers/geojsonreader.ts:4","helpers/geojsonreader.ts:76","helpers/geojsonreader.ts:9","implement","import","info","input","invers","leaflet","leaflet'","linestr","linestring.coordinates.foreach(point","linestring.foreach(point","match","method","multilinestr","multilinestring.coordinates.foreach(linestr","multipoint","multipoint.coordinates.foreach(point","multipolygon","multipolygon.coordinates.foreach(polygon","newlatlng","newlatlng.lat","newlatlng.lng","point","point[0","point[1","polygon","polygon.coordinates.foreach(polygonel","polygon.foreach(polygonel","polygonelement.foreach(point","proj4","project","properli","realli","render","reproject","result","return","set","sourc","state","this.transformjsoncoordinates(featur","this.transformjsoncoordinates(feature.geometri","this.transformjsoncoordinates(geometri","this.transformpointcoordinates(point","this.transformpointcoordinates(point.coordin","transformjsoncoordin","transformjsoncoordinates(geojson","transformpointcoordin","transformpointcoordinates(point","type","unproject","us","var","void","wgs84","wm","x","y"],"classes/attributionModel.html":["attribut","attributionmodel","befor","bottomleft","bottomright","class","constructor","constructor(opt","control","corner","default","defin","disabl","export","fals","file","html","info","key","leaflet","map","match","models/attributionmodel.t","models/attributionmodel.ts:1","models/attributionmodel.ts:11","models/attributionmodel.ts:12","null","on","option","options[key","pass","posit","possibl","prefix","properti","result","shown","sourc","string","text","this[key","topleft","topright","undefin","valu","var"],"classes/path.html":["0.2","1","3","3388ff","along","boolean","border","browser","canva","circl","class","classnam","color","constructor","constructor(pathinfo","corner","custom","dash","dasharray","dashoffset","default","defin","determin","disabl","distanc","doesn't","draw","element","end","evenodd","export","fals","file","fill","fillcolor","fillopac","fillrul","info","insid","instanc","key","layer","linecap","linejoin","map'","match","models/path.t","models/path.ts:1","models/path.ts:11","models/path.ts:12","models/path.ts:13","models/path.ts:14","models/path.ts:15","models/path.ts:16","models/path.ts:17","models/path.ts:18","models/path.ts:19","models/path.ts:20","models/path.ts:21","models/path.ts:22","models/path.ts:24","name","null","number","old","opac","option","over","path","pathinfo","pathinfo[key","pattern","pixel","polygon","power","preced","properti","render","result","round","set","shape","sourc","specif","start","string","stroke","svg","take","this[key","todo","true","undefin","us","valu","var","weight","whether","width","work"],"classes/polygon.html":["_hole","_outer","array","class","constructor","constructor(_out","defin","export","file","getpolygonwithhol","getpolygonwithouthol","hole","info","match","method","models/polygon.t","models/polygon.ts:14","models/polygon.ts:18","models/polygon.ts:2","models/polygon.ts:3","number","outer","polygon","polygon.push(this.hol","polygon.push(this.out","properti","public","result","return","sourc","this.hol","this.out","void"],"classes/scaleModel.html":["100","200","500","alway","boolean","bottomleft","bottomright","class","constructor","constructor(opt","control","corner","date","default","defin","dynam","e.g","export","file","imperi","info","it'","key","line","m/km","map","match","maximum","maxwidth","metric","mi/ft","models/scalemodel.t","models/scalemodel.ts:1","models/scalemodel.ts:11","models/scalemodel.ts:12","models/scalemodel.ts:13","models/scalemodel.ts:14","models/scalemodel.ts:15","move","moveend","null","number","on","option","options[key","otherwis","pixel","posit","possibl","properti","result","round","scale","scalemodel","set","show","sourc","string","this[key","topleft","topright","true","undefin","up","updat","updatewhenidl","valu","var","whether","width"],"classes/zoomModel.html":["bottomleft","bottomright","button","class","constructor","constructor(opt","control","corner","default","defin","export","file","info","key","map","match","models/zoommodel.t","models/zoommodel.ts:1","models/zoommodel.ts:11","models/zoommodel.ts:12","models/zoommodel.ts:13","models/zoommodel.ts:14","models/zoommodel.ts:15","null","on","option","options[key","out","posit","possibl","properti","result","set","sourc","string","text","this[key","titl","topleft","topright","undefin","valu","var","zoom","zoomintext","zoomintitl","zoommodel","zoomouttext","zoomouttitl"],"interfaces/Ipath.html":["boolean","classnam","color","dasharray","dashoffset","defin","export","file","fill","fillcolor","fillopac","fillrul","info","interfac","interfaces/path.t","interfaces/path.ts:10","interfaces/path.ts:11","interfaces/path.ts:12","interfaces/path.ts:13","interfaces/path.ts:2","interfaces/path.ts:3","interfaces/path.ts:4","interfaces/path.ts:5","interfaces/path.ts:6","interfaces/path.ts:7","interfaces/path.ts:8","interfaces/path.ts:9","ipath","linejoin","match","number","opac","properti","result","sourc","string","stroke","type","weight"],"miscellaneous.html":["___karma__","candtleafletcompon","candtleafletservic","function","index.t","match","miscellan","mockcompon","mockcomponent(opt","requir","result","system","test/main.test.t","test/mock.component.t","undefin","variabl"],"coverage.html":["0","0/10","0/11","0/12","0/13","0/16","0/17","0/3","0/4","0/6","0/7","0/9","1/13","1/15","1/4","1/6","1/7","14","16","25","6","7","attributioncontrol","attributionmodel","circle/circle.t","circleel","circlemarker/circlemarker.t","circlemarkerel","class","compon","coordinatehandl","coverag","document","file","geojson/geojson.t","geojsoncoordinatehandl","geojsonel","group/group.t","groupservic","guidservic","helpers/coodinatehandler.t","helpers/geojsonreader.t","helperservic","identifi","imageoverlay/imag","imageoverlayel","inject","interfac","interfaces/path.t","ipath","layer/layer.t","layerel","leafletel","leafletgroup","map/attribution/attribution.t","map/map.t","map/scale/scale.t","map/watermark/watermark.t","map/zoom/zoom.t","mapservic","marker/marker.t","markerel","match","models/attributionmodel.t","models/path.t","models/polygon.t","models/scalemodel.t","models/zoommodel.t","overlay.t","path","polygon","polygon/polygon.t","polygonel","polyline/polyline.t","polylineel","popup/popup.t","popupel","popupservic","result","scalecontrol","scalemodel","services/globalid.service.t","services/group.service.t","services/helper.service.t","services/map.service.t","services/popup.service.t","statement","type","watermarkcompon","zoomcontrol","zoommodel"]},"length":33},"tokenStore":{"root":{"0":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.01744186046511628},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.0111731843575419},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.13245033112582782}},"x":{"3":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232}}},"8":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232}}},"docs":{}},".":{"2":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}},"docs":{}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.013245033112582781}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.019867549668874173}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.026490066225165563}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.019867549668874173}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.013245033112582781}}},"docs":{}}},"1":{"0":{"0":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.022900763358778626}}},"2":{"1":{"docs":{},".":{"5":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968}}},"docs":{}}},"3":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968}}},"docs":{}},"docs":{}},"2":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.019867549668874173}}},"5":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05}}},"6":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"9":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.01675977653631285},"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}},".":{"1":{"0":{"5":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"9":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"docs":{}},"5":{"5":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"6":{"1":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"7":{"9":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"docs":{}},"8":{"9":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"docs":{}},"9":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695}}},"2":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"9":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}},"docs":{}},"/":{"1":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.013245033112582781}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.019867549668874173}}},"docs":{}}},"2":{"0":{"0":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}},"p":{"docs":{},"x":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}}}}},"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609}}},"5":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"coverage.html":{"ref":"coverage.html","tf":0.013245033112582781}}},"6":{"docs":{},".":{"5":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968}}},"docs":{}}},"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}},"3":{"3":{"8":{"8":{"docs":{},"f":{"docs":{},"f":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.015209125475285171}}}}},"docs":{}},"docs":{}},"8":{"5":{"7":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407}}},"docs":{}},"docs":{}},"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}},"4":{"3":{"2":{"6":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407}}},"docs":{}},"docs":{}},"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232}}}}}},"5":{"0":{"0":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}},"docs":{}},"2":{"docs":{},".":{"6":{"0":{"5":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"6":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"docs":{}},"4":{"5":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"docs":{}},"5":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"6":{"5":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"8":{"6":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"7":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"docs":{}},"9":{"6":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"7":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"docs":{}},"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948}}},"docs":{}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.05}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"7":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{},"a":{"docs":{},"d":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}},"(":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},"(":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}}}}}},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.014084507042253521}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"x":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.0273224043715847},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.021834061135371178},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":5.021857923497268},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":5.028985507246377},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}}}}}}}},"r":{"docs":{},"r":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.034482758620689655}},"a":{"docs":{},"y":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.06896551724137931},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.029850746268656716}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.034482758620689655}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827}}}}}}}}},"[":{"docs":{},"i":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.034482758620689655}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}},"b":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.034482758620689655}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.0111731843575419}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.011834319526627219},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095},"classes/path.html":{"ref":"classes/path.html","tf":0.015209125475285171},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.04580152671755725},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.04918032786885246}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.022900763358778626},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.043478260869565216},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827}}}}}}}}},"[":{"docs":{},"i":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.05172413793103448}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406}}}}}},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.03636363636363636}}}}}}}},"c":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.038461538461538464}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.014084507042253521},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.014084507042253521},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}}}},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"overview.html":{"ref":"overview.html","tf":0.05},"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":5.027322404371585},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":5.014792899408284},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":5.015337423312883},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":5.018518518518518},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":5.01984126984127},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":5.021834061135372},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":5.017751479289941},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":5.026737967914438},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":5.011185682326622},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":5.012658227848101},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":5.0126903553299496},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":5.019762845849803},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":5.027624309392265},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":5.029239766081871},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":5.027624309392265},"coverage.html":{"ref":"coverage.html","tf":0.09933774834437085}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}},"'":{"docs":{},"y":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.017543859649122806},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.057692307692307696},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.05172413793103448},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.031914893617021274},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.034482758620689655},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.01507537688442211},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.028985507246376812},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.015267175572519083},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.01818181818181818}}}}},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.029850746268656716}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.0273224043715847},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.027624309392265192},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.027624309392265192},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.022900763358778626},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.008875739644970414},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.009202453987730062},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.011904761904761904},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.011857707509881422},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":5.022988505747127},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}}},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.026615969581749048},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.02459016393442623}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.006622516556291}}}}}}}},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.07537688442211055}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":5.022988505747127},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":5.010050251256281},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":5.028985507246377},"classes/path.html":{"ref":"classes/path.html","tf":5.011406844106464},"classes/polygon.html":{"ref":"classes/polygon.html","tf":5.029850746268656},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":5.015267175572519},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":5.0181818181818185},"coverage.html":{"ref":"coverage.html","tf":0.046357615894039736}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.02459016393442623}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.026627218934911243},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.027607361963190184},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077},"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":5.011834319526627},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":5.012269938650307},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374}}}}}}},"/":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"2":{"1":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687}}},"2":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687}}},"3":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687}}},"4":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687}}},"5":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687}}},"6":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374}}},"docs":{}},"3":{"8":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687}}},"docs":{}},"5":{"9":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609}}}}}}},"/":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"2":{"1":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047}}},"2":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047}}},"3":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047}}},"4":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047}}},"5":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047}}},"6":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047}}},"7":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609}}},"docs":{}},"3":{"9":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047}}},"docs":{}},"6":{"1":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.011834319526627219},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.009202453987730062},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.01775147928994083},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.01507537688442211},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.028985507246376812},"classes/path.html":{"ref":"classes/path.html","tf":0.045627376425855515},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.03816793893129771},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.045454545454545456}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01639344262295082},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.029585798816568046},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.027607361963190184},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.018518518518518517},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.031746031746031744},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.034934497816593885},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.04437869822485207},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.026737967914438502},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.024608501118568233},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.027848101265822784},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.030456852791878174},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.019762845849802372},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.016574585635359115},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.017543859649122806},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.016574585635359115},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.05813953488372093},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.038461538461538464},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.034482758620689655},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.0670391061452514},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.02127659574468085},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.06896551724137931},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.01507537688442211},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.043478260869565216},"classes/path.html":{"ref":"classes/path.html","tf":0.07224334600760456},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.07462686567164178},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.04580152671755725},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.05454545454545454},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.09836065573770492}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407}}}}},"m":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704},"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}}},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}},"u":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077}},"l":{"docs":{},"i":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.02459016393442623}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.02459016393442623}}}}}}}}}},"t":{"docs":{},"e":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}}}}}},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425}},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.02127659574468085}}}}}}}}}}}}}}}}}}},"d":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.028169014084507043}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}},"s":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.02185792349726776},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.023668639053254437},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.024539877300613498},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.025925925925925925},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.015873015873015872},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.017467248908296942},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.011834319526627219},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.020134228187919462},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.020253164556962026},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.02030456852791878},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.02766798418972332},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.016574585635359115},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.023391812865497075},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.016574585635359115},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.02127659574468085},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.060109289617486336},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.03254437869822485},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.03374233128834356},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.040740740740740744},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.04365079365079365},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.048034934497816595},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.03254437869822485},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.058823529411764705},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.024608501118568233},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.027848101265822784},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.027918781725888325},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.043478260869565216},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.06077348066298342},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.06432748538011696},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.06077348066298342}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.008875739644970414},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.009202453987730062},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687}}}}}}},".":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.02127659574468085}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"s":{"docs":{},"g":{"3":{"8":{"5":{"7":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},":":{"3":{"8":{"5":{"7":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}},"o":{"docs":{},"d":{"docs":{},"d":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}}}}},"r":{"docs":{},"y":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}},"r":{"docs":{},"r":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}},"o":{"docs":{},"r":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}},".":{"docs":{},"g":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}}}},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.01507537688442211}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.01507537688442211}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}},"m":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.014084507042253521}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}},"l":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"classes/path.html":{"ref":"classes/path.html","tf":0.026615969581749048},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.02459016393442623}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.02459016393442623}}}}}}},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.02459016393442623}}}}}},"r":{"docs":{},"u":{"docs":{},"l":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.02459016393442623}}}}}}},"x":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.011834319526627219},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.05172413793103448},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.008948545861297539},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.017543859649122806},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.05319148936170213},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.043478260869565216}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}},"r":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.011111111111111112},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.06030150753768844}},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":5.014814814814815},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.04522613065326633}}}}}},"/":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"2":{"1":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}}},"2":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408}}},"docs":{}},"3":{"5":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}}},"docs":{}},"6":{"0":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}}},"docs":{}},"docs":{}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.011111111111111112},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":5.010050251256281},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.01507537688442211}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.01744186046511628}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.01744186046511628}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.01744186046511628},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.01744186046511628}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.04477611940298507}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.04477611940298507}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.03488372093023256},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}}}}}}},"/":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}},".":{"docs":{},"t":{"docs":{"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"7":{"docs":{"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877}}},"8":{"docs":{"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754}}},"docs":{}},"2":{"6":{"docs":{"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877}}},"9":{"docs":{"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877}}},"docs":{}},"docs":{}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.014792899408284023},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.015337423312883436},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.018518518518518517},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0374331550802139},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.011185682326621925},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.012658227848101266},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.012690355329949238},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.019762845849802372},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":5.011627906976744},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754}}}}}},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}},"i":{"docs":{},"d":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.011111111111111112},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.016042780748663103},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.018518518518518517},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.026737967914438502},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.012658227848101266},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.012690355329949238},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.023255813953488372},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":5.038461538461538},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.023255813953488372},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}},"l":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"4":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}}},"docs":{}},"2":{"4":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}}},"docs":{}},"4":{"1":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}}},"docs":{}},"5":{"8":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}}},"docs":{}},"6":{"3":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}}},"docs":{}},"9":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"4":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}},"7":{"6":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}},"docs":{}},"9":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}},"docs":{}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.018518518518518517},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.012658227848101266},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.012690355329949238},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":5.0344827586206895},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.011185682326621925}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.011185682326621925}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}},"e":{"docs":{},"/":{"docs":{},"#":{"docs":{},"/":{"docs":{},"m":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"p":{"docs":{},"r":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"w":{"docs":{},"i":{"docs":{},"k":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.04477611940298507}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.028169014084507043},"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.0273224043715847},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.029585798816568046},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.03067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.037037037037037035},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.01984126984126984},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.013100436681222707},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.011834319526627219},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.026737967914438502},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.026845637583892617},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.030379746835443037},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.030456852791878174},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.02766798418972332},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.027624309392265192},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.027624309392265192},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.023255813953488372},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.030534351145038167}}}}}},"a":{"docs":{},"g":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.027777777777777776},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}},"e":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":5.015873015873016},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}},"/":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.03571428571428571},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}}}}}}}}}}}}}}},"g":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}}}},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.02112676056338028}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5.007042253521127},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}},".":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.043478260869565216}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.014084507042253521}}},"n":{"docs":{},"c":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.034482758620689655},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}},"i":{"docs":{},"d":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":5.017441860465116},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":5.0576923076923075},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":5.051724137931035},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":5.0083798882681565},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":5.031914893617022},"coverage.html":{"ref":"coverage.html","tf":0.033112582781456956}},"o":{"docs":{},"r":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":5.016393442622951},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}},".":{"docs":{},"t":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}},"1":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}},"2":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}},"3":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}},"docs":{}},"2":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}},"3":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}},"4":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}},"5":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}},"6":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}},"7":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}},"8":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}},"9":{"docs":{"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}},"docs":{}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01639344262295082},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.023668639053254437},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.02147239263803681},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.027777777777777776},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.034934497816593885},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.03254437869822485},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.016042780748663103},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.015659955257270694},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.015189873417721518},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.015228426395939087},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.019762845849802372},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.016574585635359115},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.017543859649122806},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.016574585635359115},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.08045977011494253},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.012658227848101266},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.012690355329949238}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":5.016393442622951},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}},"s":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154}}}}}}}},"t":{"docs":{},"'":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}},"j":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}},"e":{"docs":{},"p":{"docs":{},"s":{"docs":{},"g":{"3":{"8":{"5":{"7":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"'":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.017543859649122806}},"'":{"docs":{},"]":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}},".":{"docs":{},"w":{"docs":{},"m":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"m":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"[":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02112676056338028},"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.008875739644970414},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.009202453987730062},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.011111111111111112},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0213903743315508},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.011857707509881422},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.028985507246376812}},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.03278688524590164},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.01775147928994083},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.018404907975460124},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.022222222222222223},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.023809523809523808},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":5.011834319526627},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.013422818791946308},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.015189873417721518},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.015228426395939087},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.023715415019762844},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.03314917127071823},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.03314917127071823},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.01775147928994083},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.018404907975460124},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.022222222222222223},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":5.021390374331551},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.013422818791946308},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.015189873417721518},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.015228426395939087},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.023715415019762844},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}},"'":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}}}},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},".":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"n":{"docs":{},"e":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.015267175572519083}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.01507537688442211}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.02459016393442623}}}}}}}}},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.015873015873015872},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.034934497816593885},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":5.0174672489082965},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471}}}}}}}}}}},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471}}}}}}},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"4":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}},"5":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}},"6":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}},"7":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}},"8":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}},"9":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471}}},"docs":{}},"2":{"4":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.01744186046511628}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.01744186046511628}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.01744186046511628}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}}}}}}}}}}}}},"t":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.011904761904761904},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}}}},"[":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"]":{"docs":{},"[":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"2":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.02112676056338028}}}},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.028169014084507043},"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.011111111111111112},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.017897091722595078},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.010126582278481013},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.01015228426395939},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.013966480446927373},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}},"/":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"5":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388}}},"docs":{}},"2":{"0":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}},".":{"docs":{},"t":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"5":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"6":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"7":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"8":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"9":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"docs":{}},"2":{"0":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"1":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"2":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"3":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"4":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"6":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609}}},"docs":{}},"3":{"2":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"docs":{}},"6":{"6":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"9":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"docs":{}},"docs":{}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"5":{"docs":{"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077}}},"docs":{}},"2":{"1":{"docs":{"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"/":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"2":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537}}},"6":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"5":{"docs":{"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077}}},"docs":{}},"2":{"1":{"docs":{"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.02185792349726776},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.011834319526627219},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.012269938650306749},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.014814814814814815},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.015873015873015872},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.017467248908296942},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.01775147928994083},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0213903743315508},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.008948545861297539},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.010126582278481013},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.01015228426395939},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.015810276679841896},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.022099447513812154},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.022099447513812154},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":5.005586592178771},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414}}}},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}},"'":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.014084507042253521},"overview.html":{"ref":"overview.html","tf":0.1},"modules.html":{"ref":"modules.html","tf":0.4},"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.038461538461538464},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.034482758620689655},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.02127659574468085},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.022988505747126436},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.01507537688442211},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.028985507246376812},"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.029850746268656716},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.015267175572519083},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.01818181818181818},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.01639344262295082},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043},"coverage.html":{"ref":"coverage.html","tf":0.013245033112582781}}}},"h":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232}}}}}}}}}}},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.012269938650306749},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.02237136465324385},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077}},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":5.008948545861298},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}}}}}}},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"0":{"5":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}},"docs":{}},"1":{"2":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}},"docs":{}},"docs":{}},"2":{"4":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}},"5":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}},"6":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}},"7":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}},"8":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}},"9":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}}},"docs":{}},"4":{"2":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}},"docs":{}},"8":{"7":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"x":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.022900763358778626}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.014084507042253521}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.030534351145038167}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414}}}}}}},"/":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.043478260869565}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"modules.html":{"ref":"modules.html","tf":10.2}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077}}}}}}},"e":{"docs":{},"l":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694}},".":{"docs":{},"t":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"1":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406}}},"2":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406}}},"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}},".":{"docs":{},"t":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"1":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"2":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"3":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"4":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"5":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"6":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"7":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"8":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"9":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"2":{"0":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"1":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"2":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"4":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}},"docs":{}},"docs":{}}}}}}}},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"4":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358}}},"8":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358}}},"docs":{}},"2":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358}}},"3":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.029850746268656716}}},"docs":{}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384}},".":{"docs":{},"t":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"1":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}},"2":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}},"3":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}},"4":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}},"5":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}},"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}},"docs":{}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}},".":{"docs":{},"t":{"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"1":{"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}},"2":{"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}},"3":{"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}},"4":{"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}},"5":{"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}},"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}},"docs":{}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.10638297872340426}}}}}}},"v":{"docs":{},"e":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}}}}}},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.043478260869565216}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.043478260869565216}}}}}}}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.01507537688442211}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.01507537688442211}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.01507537688442211}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}}}}}}},"/":{"docs":{},"k":{"docs":{},"m":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}}}}},"n":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"w":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.008948545861297539},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.057692307692307696}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}},"n":{"docs":{},"g":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.035211267605633804}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01639344262295082},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.008875739644970414},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.009202453987730062},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.011111111111111112},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.011904761904761904},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.013100436681222707},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.016042780748663103},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.011857707509881422},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.016574585635359115},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.017543859649122806},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.016574585635359115}}}}}}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.008875739644970414},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.009202453987730062},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.016042780748663103},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.011111111111111112},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543}}}}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}},":":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.015873015873015872},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.017467248908296942},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0213903743315508},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.03910614525139665},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"(":{"docs":{},"'":{"docs":{},")":{"docs":{},"[":{"0":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"docs":{}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.013966480446927373}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.019011406844106463},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.01775147928994083},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.012269938650306749},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.029585798816568046},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.008948545861297539},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.015810276679841896},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.05747126436781609},"classes/path.html":{"ref":"classes/path.html","tf":0.022813688212927757},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.029850746268656716},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.015267175572519083},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.07377049180327869}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}},"t":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"(":{"docs":{},"'":{"docs":{},")":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},")":{"docs":{},"'":{"docs":{},")":{"docs":{},"[":{"0":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"classes/path.html":{"ref":"classes/path.html","tf":5.019011406844107},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}}}}}},"s":{"docs":{},"s":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}}},"l":{"docs":{},"i":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}},"j":{"4":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}},"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.01775147928994083},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.018404907975460124},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.025925925925925925},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.016042780748663103},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.015659955257270694},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.020253164556962026},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.02030456852791878},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.015810276679841896},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.046511627906976744},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.0446927374301676}}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.043478260869565216}}}}},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.05813953488372093},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.08379888268156424},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.02127659574468085},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.05970149253731343}}}}}}},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.020253164556962026},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.01507537688442211},"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855},"classes/polygon.html":{"ref":"classes/polygon.html","tf":5.059701492537314},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":5.010126582278481},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506}}}},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358}}}}}}}}}}}}}}}},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"2":{"3":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"5":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"6":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"7":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"8":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"9":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"docs":{}},"3":{"0":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506}}},"docs":{}},"4":{"4":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"docs":{}},"6":{"5":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"docs":{}},"7":{"6":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.014814814814814815},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.02284263959390863},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":5.01015228426396},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695}}}}}}},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"2":{"2":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"3":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"4":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"5":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695}}},"6":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"7":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"8":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695}}},"docs":{}},"4":{"2":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"docs":{}},"6":{"5":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"docs":{}},"7":{"6":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.03162055335968379},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":5.015810276679842},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.014792899408284023},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.015337423312883436},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.018518518518518517},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.015659955257270694},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.012658227848101266},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.012690355329949238},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":5.0212765957446805},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}}}}}}}}}},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948}}}}}}},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"8":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}},"9":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}},"docs":{}},"2":{"0":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948}}},"docs":{}},"3":{"0":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.03015075376884422}},"[":{"0":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407}}},"1":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407}}},"docs":{}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.057971014492753624},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.030534351145038167},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.03636363636363636}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}}}}},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}}}}}},"r":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.057692307692307696}},"e":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}},"e":{"docs":{},"r":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}}}}}}}},"i":{"docs":{},"r":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.014084507042253521},"overview.html":{"ref":"overview.html","tf":0.1},"modules.html":{"ref":"modules.html","tf":0.4},"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.038461538461538464},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.034482758620689655},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.02127659574468085},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.022988505747126436},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.028985507246376812},"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.029850746268656716},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.015267175572519083},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.01818181818181818},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.01639344262295082},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043},"coverage.html":{"ref":"coverage.html","tf":0.013245033112582781}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704},"classes/path.html":{"ref":"classes/path.html","tf":0.019011406844106463}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.011185682326621925},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.017543859649122806},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.05232558139534884},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.057692307692307696},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.08620689655172414},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.06424581005586592},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.05747126436781609},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.020100502512562814},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.05970149253731343}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.023255813953488372}}}}},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}},"x":{"docs":{},"j":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}},"r":{"docs":{},"x":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.015209125475285171},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}}}}}},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"m":{"docs":{},"e":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.00819672131147541}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}},"t":{"docs":{},"e":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.011834319526627219},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.012269938650306749},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.023809523809523808},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.043668122270742356},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0213903743315508},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.013422818791946308},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.015189873417721518},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.015228426395939087},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.0223463687150838},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.057971014492753624},"classes/path.html":{"ref":"classes/path.html","tf":0.07984790874524715},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.015267175572519083},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.09090909090909091},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.1721311475409836}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.03802281368821293},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.02459016393442623}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043}},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.014084507042253521}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05}}}}}},"e":{"docs":{},"r":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.027624309392265192},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.015267175572519083}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":5.0220994475138125},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":5.015267175572519},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.09289617486338798},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.05029585798816568},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.05214723926380368},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.06296296296296296},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.06746031746031746},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.07423580786026202},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.05029585798816568},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.09090909090909091},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.03803131991051454},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.043037974683544304},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.04314720812182741},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.06719367588932806},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.09392265193370165},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.09941520467836257},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.09392265193370165}}}}}}},"f":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"0":{"0":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"7":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"1":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"2":{"0":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"4":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"8":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"3":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"4":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"5":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}},"9":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"docs":{}},"2":{"2":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"6":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"9":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"docs":{}},"3":{"3":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"docs":{}},"4":{"5":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"docs":{}},"5":{"8":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"docs":{}},"8":{"5":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"9":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"9":{"3":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}},"docs":{}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}},"1":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}},"2":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186}}},"6":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}},"docs":{}},"4":{"7":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}},"docs":{}},"5":{"5":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}},"9":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}},"docs":{}},"6":{"3":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}},"docs":{}},"9":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}},"docs":{}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"5":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232}}},"9":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"5":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425}}},"9":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425}}},"docs":{}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"5":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827}}},"9":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}}}},"t":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704},"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.03636363636363636}},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}}}}}},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}}}}}}},"w":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.022900763358778626}},"n":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406}}}}},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879}}}}}},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}},"s":{"docs":{},"[":{"0":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}},"docs":{}}}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.043478260869565216}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.043478260869565216}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.01092896174863388},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.011049723756906077},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.09574468085106383},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.01818181818181818}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.008875739644970414},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.009202453987730062},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.011834319526627219},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.009202453987730062},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.011111111111111112},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.012658227848101266},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.012690355329949238},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.011857707509881422}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}},"]":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543}}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.005917159763313609},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.008379888268156424}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.01744186046511628}}}}}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"g":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"g":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"g":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}},"r":{"docs":{},"k":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}}}}},"i":{"docs":{},"n":{"docs":{},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687}}}}}}}}}}}}}}}}},"r":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.011834319526627219}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.02127659574468085}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}}}}}}}},"[":{"0":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.01744186046511628}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695}}}}}}}}}}}}}},"g":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.011627906976744186}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"g":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"g":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408}}}}}}},"t":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.031914893617021274}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},"s":{"docs":{},"[":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.029850746268656716}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.010126582278481013}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.01015228426395939}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047}}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968}},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},"s":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.017467248908296942}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.02512562814070352}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}}}}}}}}}},"w":{"docs":{},"m":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.014925373134328358}}}}},"i":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.022988505747126436}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.022988505747126436}},"i":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.022988505747126436}}}}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.014084507042253521},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425}}}},"t":{"docs":{},"l":{"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.01818181818181818}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.014084507042253521}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"r":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"r":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}},"e":{"docs":{},"e":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}},"u":{"docs":{},"e":{"docs":{"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.06382978723404255},"classes/path.html":{"ref":"classes/path.html","tf":0.015209125475285171},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.05343511450381679}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.014084507042253521}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.01775147928994083},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.015337423312883436},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.027777777777777776},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.034934497816593885},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.026627218934911243},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.013422818791946308},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.010126582278481013},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.01015228426395939},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.011857707509881422},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.09836065573770492},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02112676056338028}},".":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}}}},"o":{"docs":{},"f":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}},"w":{"docs":{},"o":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.02727272727272727}}}}}}}},"d":{"docs":{},"o":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}}}}}},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.02112676056338028},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704},"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879}},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.014792899408284023},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.015337423312883436},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.011185682326621925},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.012658227848101266},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.012690355329949238},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.034482758620689655},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.043478260869565216}}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}}}}}}}}},"r":{"docs":{},"l":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}},"p":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.015267175572519083}},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.022900763358778626}}}}}}}}}}}}}}},"v":{"1":{"docs":{},".":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}},"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232}},"a":{"docs":{},"r":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.02185792349726776},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.01775147928994083},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.018404907975460124},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.014814814814814815},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.015873015873015872},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.017467248908296942},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.014792899408284023},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0213903743315508},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.026845637583892617},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.017721518987341773},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.017766497461928935},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.015810276679841896},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.022099447513812154},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.03508771929824561},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.022099447513812154},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.04522613065326633},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.043478260869565216}}}}}}},"l":{"docs":{},"u":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.011834319526627219},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.009202453987730062},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.014792899408284023},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.007905138339920948},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.043478260869565216},"classes/path.html":{"ref":"classes/path.html","tf":0.04182509505703422},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.05343511450381679},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.05454545454545454}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.007407407407407408},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.008875739644970414},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0106951871657754},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.006711409395973154},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.029069767441860465},"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"injectables/HelperService.html":{"ref":"injectables/HelperService.html","tf":0.017241379310344827},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.04189944134078212},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.010638297872340425},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.05747126436781609},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.010050251256281407},"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.029850746268656716}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"1":{"6":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232}}},"docs":{}},"docs":{}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.017543859649122806},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":5.023391812865497},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.011695906432748537}}}}}}}}}}}}},"i":{"docs":{},"k":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.015267175572519083}}}}}},"m":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471}}}}}}}}},"w":{"docs":{},"w":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}},"g":{"docs":{},"s":{"8":{"4":{"docs":{"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}}},"docs":{}},"docs":{}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.011406844106463879},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.02459016393442623}}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.015267175572519083}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}}}}},"y":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.007042253521126761}}}}}}}}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.03636363636363636}},"e":{"docs":{},"r":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.04477611940298507}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.05}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.023809523809523808},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.017467248908296942},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.0029585798816568047},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.019553072625698324}},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936}}}}}},"t":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"6":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968}}},"7":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968}}},"8":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968}}},"9":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968}}},"docs":{}},"2":{"0":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968}}},"1":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936}}},"8":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968}}},"docs":{}},"docs":{}}}}},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},"]":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.02185792349726776},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.01775147928994083},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.018404907975460124},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.014814814814814815},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.013422818791946308},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.015189873417721518},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.015228426395939087},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.015810276679841896},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.022099447513812154},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.022099447513812154},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.028985507246376812},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.015267175572519083},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.01818181818181818}},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.028985507246376812},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.015267175572519083},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.01818181818181818}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.007936507936507936},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.008733624454148471},"classes/path.html":{"ref":"classes/path.html","tf":0.019011406844106463},"interfaces/Ipath.html":{"ref":"interfaces/Ipath.html","tf":0.02459016393442623}}}}},"n":{"docs":{"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.005917159763313609},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.006134969325153374},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.005063291139240506},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.005076142131979695},"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.10638297872340426}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269}}}}}}},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/PopupService.html":{"ref":"injectables/PopupService.html","tf":0.02127659574468085}}}}}}}}}}}}},"b":{"docs":{},"j":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0044742729306487695}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093},"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.00558659217877095}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GroupService.html":{"ref":"injectables/GroupService.html","tf":0.005813953488372093}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.011111111111111112},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.007594936708860759},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.007614213197969543}}}}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"classes/path.html":{"ref":"classes/path.html","tf":0.0076045627376425855}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1},"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.011834319526627219},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.027624309392265192},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.07272727272727272}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/AttributionControl.html":{"ref":"components/AttributionControl.html","tf":0.00546448087431694},"components/CircleElement.html":{"ref":"components/CircleElement.html","tf":0.0029585798816568047},"components/CircleMarkerElement.html":{"ref":"components/CircleMarkerElement.html","tf":0.003067484662576687},"components/GeoJsonElement.html":{"ref":"components/GeoJsonElement.html","tf":0.003703703703703704},"components/ImageOverlayElement.html":{"ref":"components/ImageOverlayElement.html","tf":0.003968253968253968},"components/LayerElement.html":{"ref":"components/LayerElement.html","tf":0.004366812227074236},"components/LeafletElement.html":{"ref":"components/LeafletElement.html","tf":0.011834319526627219},"components/LeafletGroup.html":{"ref":"components/LeafletGroup.html","tf":0.0053475935828877},"components/MarkerElement.html":{"ref":"components/MarkerElement.html","tf":0.0022371364653243847},"components/PolygonElement.html":{"ref":"components/PolygonElement.html","tf":0.002531645569620253},"components/PolylineElement.html":{"ref":"components/PolylineElement.html","tf":0.0025380710659898475},"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474},"components/ScaleControl.html":{"ref":"components/ScaleControl.html","tf":0.0055248618784530384},"components/WatermarkComponent.html":{"ref":"components/WatermarkComponent.html","tf":0.005847953216374269},"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":5.0220994475138125},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.011049723756906077}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":5.0181818181818185},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/ZoomControl.html":{"ref":"components/ZoomControl.html","tf":0.0055248618784530384}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.02727272727272727}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.02727272727272727}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.02727272727272727}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.02727272727272727}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/PopupElement.html":{"ref":"components/PopupElement.html","tf":0.003952569169960474}}}}}}}}}},"y":{"docs":{"injectables/MapService.html":{"ref":"injectables/MapService.html","tf":0.002793296089385475},"classes/attributionModel.html":{"ref":"classes/attributionModel.html","tf":0.014492753623188406},"classes/path.html":{"ref":"classes/path.html","tf":0.0038022813688212928},"classes/scaleModel.html":{"ref":"classes/scaleModel.html","tf":0.007633587786259542},"classes/zoomModel.html":{"ref":"classes/zoomModel.html","tf":0.00909090909090909}}}}},"x":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232},"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218},"classes/GeoJSONCoordinateHandler.html":{"ref":"classes/GeoJSONCoordinateHandler.html","tf":0.005025125628140704}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"'":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"[":{"docs":{},"x":{"docs":{},"y":{"docs":{},"]":{"docs":{},"/":{"docs":{},"g":{"docs":{"injectables/GuidService.html":{"ref":"injectables/GuidService.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{"classes/CoordinateHandler.html":{"ref":"classes/CoordinateHandler.html","tf":0.011494252873563218}}}},"_":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.05970149253731343}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/polygon.html":{"ref":"classes/polygon.html","tf":0.029850746268656716}}}}}}},"_":{"docs":{},"_":{"docs":{},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"_":{"docs":{},"_":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043}}}}}}}}}}}}},"length":3065},"corpusTokens":["0","0.2","0/10","0/11","0/12","0/13","0/16","0/17","0/3","0/4","0/6","0/7","0/9","0x3","0x8","1","1.1","1.105","1.109","1.15","1.155","1.16","1.161","1.179","1.189","1.19","1.2","1.9","1/13","1/15","1/4","1/6","1/7","100","1021.5","1023","12","14","15","16","19","2","20","200","200px","25","26.5","3","3388ff","3857","4","4326","4xxx","5","500","52.6","52.605","52.606","52.645","52.65","52.66","52.665","52.686","52.687","52.696","52.697","6","7","___karma__","_hole","_outer","a.length","a[i","actual_compon","ad","add","addbasemap","addbasemap(basemap","addcontrol","addolayerstogroup","addolayerstogroup(overlay","addoverlay","addoverlay(overlay","agre","aheadmainli","algorithm","along","alway","angular","angular/cor","angular/http","anyon","app","appcompon","application/x","arr","arr[index","array","arraycompar","arraycompare(a","assigncartesianarraytoleafletslatlngschema","assigncartesianarraytoleafletslatlngschema(arr","assigncartesianpointtoleafletslatlngschema","attemp","attribut","attribution.css","attribution.html","attributioncontrol","attributionmodel","attributionmodel(nul","autoclos","b","b.length","b[i","bare","base","basemap","befor","boolean","bootstrap","border","bottomleft","bottomright","bound","browser","button","c","callback","callback(fals","callback(tru","candtleafletcompon","candtleafletservic","canva","catch((error","center","chang","check","childrent","circl","circle.css","circle.html","circle/circle.t","circle/circle.ts:21","circle/circle.ts:22","circle/circle.ts:23","circle/circle.ts:24","circle/circle.ts:25","circle/circle.ts:26","circle/circle.ts:27","circle/circle.ts:39","circle/circle.ts:61","circleel","circlemarker.css","circlemarker.html","circlemarker/circlemarker.t","circlemarker/circlemarker.ts:21","circlemarker/circlemarker.ts:22","circlemarker/circlemarker.ts:23","circlemarker/circlemarker.ts:24","circlemarker/circlemarker.ts:25","circlemarker/circlemarker.ts:26","circlemarker/circlemarker.ts:38","circlemarker/circlemarker.ts:59","circlemarkerel","class","classnam","closepopuponclick","code","color","compon","component_templ","components/app.compon","config","configur","console.log(err","console.warn(\"geojson","console.warn(\"someth","console.warn(\"thi","console.warn('y","constructor","constructor(_out","constructor(guidservic","constructor(mapservic","constructor(opt","constructor(pathinfo","constructor(priv","content","control","control'},{'nam","coordin","coordinatehandl","corner","coverag","cr","creat","createmarkerlay","createmarkerlayer(mark","crs.code","crs.unproject","custom","dash","dasharray","dashoffset","date","declar","default","defaultextens","defin","depress","determin","develop","direct","directli","disabl","distanc","document","document.createelement(\"img","doesn't","doesnt","dom","don't","draw","due","dynam","e.g","element","element'},{'nam","element._leaflet_id","element.bindpopup(mouseov","element.bindpopup(onclick","element.bindpopup(text","element.on('click","element.on('mouseov","elementposit","elementref","elementtext","enablepopup","enablepopup(mouseov","end","enough","epsg3857","epsg:3857","err","error","evenodd","eventemitt","everywher","exampl","exist","existing_nam","expect","export","extend","extens","fals","featur","featurecollect","featurecollection.features.foreach(featur","feel","file","fileread","fill","fillcolor","fillopac","fillrul","fix","follow","forget","fork","form","format","found","free","function","gener","genet","geojson","geojson.css","geojson.html","geojson.typ","geojson/geojson.t","geojson/geojson.ts:21","geojson/geojson.ts:22","geojson/geojson.ts:35","geojson/geojson.ts:60","geojsoncoordinatehandl","geojsonel","geojsonfeatur","geojsonfeaturecollect","geojsongeometrycollect","geojsonlinestr","geojsonmultilinestr","geojsonmultipoint","geojsonmultipolygon","geojsonpoint","geojsonpolygon","geometrycollect","geometrycollection.geometries.foreach(geometri","getbasemap","getgroup","getimag","getlayercontrol","getlayergroup","getlayernumb","getmap","getobservablebasemap","getobservablegroup","getobservableoverlay","getoverlay","getpolygonwithhol","getpolygonwithouthol","getuniquenam","getuniquename(nam","gid","gjson","gjson.addto(map","global","globalid","go","group","group'},{'nam","group.css","group.globalid","group.html","group.nam","group/group","group/group.t","group/group.ts:17","group/group.ts:18","group/group.ts:26","group/group.ts:29","groupidentifi","groupnam","groupservic","guidservic","handi","handl","haven't","header","help","helpers/coodinatehandl","helpers/coodinatehandler.t","helpers/coodinatehandler.ts:14","helpers/coodinatehandler.ts:24","helpers/coodinatehandler.ts:41","helpers/coodinatehandler.ts:58","helpers/coodinatehandler.ts:63","helpers/coodinatehandler.ts:9","helpers/geojsonread","helpers/geojsonreader.t","helpers/geojsonreader.ts:4","helpers/geojsonreader.ts:76","helpers/geojsonreader.ts:9","helperservic","here","hole","html","http","https://elasticrash.github.io/angular.io.mapviewer/exampl","https://elasticrash.github.io/angular.io.mapviewer/example/#/mm","https://elasticrash.github.io/angular.io.mapviewer/example/#/prj","https://elasticrash.github.io/angular.io.mapviewer/example/#/random","https://elasticrash.github.io/angular.io.mapviewer/example/#/simpl","https://github.com/elasticrash/ngx.leaflet.component/wiki","icon","iconanchor","icons","iconurl","identifi","imag","imageexist","imageexists(url","imageoverlay/imag","imageoverlayel","imagepath","img","img.height","img.onerror","img.onload","img.src","img.style.width","img.width","imperi","implement","import","includ","increasenumb","index","index.t","info","inheritedopt","inject","injector","input","insid","instal","instanc","instanceof","interfac","interfaces/path","interfaces/path.t","interfaces/path.ts:10","interfaces/path.ts:11","interfaces/path.ts:12","interfaces/path.ts:13","interfaces/path.ts:2","interfaces/path.ts:3","interfaces/path.ts:4","interfaces/path.ts:5","interfaces/path.ts:6","interfaces/path.ts:7","interfaces/path.ts:8","interfaces/path.ts:9","invers","io","ipath","it'","js","keepinview","key","l","l.circle([this.lat","l.circlemarker([this.lat","l.control.attribution(this.options).addto(map","l.control.extend","l.control.layers(this.getbasemap","l.control.layers(this.mapservice.getbasemap","l.control.scale(this.options).addto(map","l.control.zoom(this.options).addto(map","l.control['watermark","l.control['watermark'](opt","l.crs.epsg3857","l.crs.simpl","l.domutil.create('img","l.geojson(this.geojson","l.icon","l.imageoverlay(this.imagepath","l.latlng(this.lat","l.latlngbound","l.layergroup(this.getlayergroup","l.map(this.mapelement.nativeel","l.marker([model.lat","l.marker([this.lat","l.polygon([this.latlng","l.polyline(this.latlng","l.popup","l.tilelayer(this.slippylay","l.tilelayer.wms(this.wmslay","l[splitcrs[1]][splitcrs[2","lat","latlng","latlngbound","layer","layer.addto(map","layer.css","layer.html","layer/layer.t","layer/layer.ts:14","layer/layer.ts:15","layer/layer.ts:16","layer/layer.ts:17","layer/layer.ts:18","layer/layer.ts:19","layer/layer.ts:24","layercontrol","layercontrolflag","layercontrolobject","layerel","layergroup","layergroupnumb","layerid","layersincontrolnumb","leaf","leaflet","leaflet'","leafletel","leafletgroup","legend","lib/typescript.j","line","linecap","linejoin","linestr","linestring.coordinates.foreach(point","linestring.foreach(point","live","lon","m/km","main","make","map","map'","map((r","map.css","map.html","map.removecontrol(this.layercontrolobject","map.removelayer(this.group","map.removelayer(this.polygon","map.removelayer(this.polylin","map/attribution/attribution.t","map/attribution/attribution.ts:15","map/attribution/attribution.ts:20","map/map","map/map.t","map/map.ts:15","map/map.ts:16","map/map.ts:17","map/map.ts:18","map/map.ts:19","map/map.ts:20","map/map.ts:21","map/map.ts:22","map/map.ts:23","map/map.ts:24","map/map.ts:26","map/map.ts:32","map/map.ts:66","map/map.ts:69","map/scale/scale.t","map/scale/scale.ts:15","map/scale/scale.ts:21","map/watermark/watermark.t","map/watermark/watermark.ts:12","map/watermark/watermark.ts:16","map/zoom/zoom.t","map/zoom/zoom.ts:15","map/zoom/zoom.ts:21","mapel","mapservic","mapservice.addoverlay(this.getgroup","marker","marker.addto(map","marker.css","marker.html","marker/marker.t","marker/marker.ts:105","marker/marker.ts:112","marker/marker.ts:24","marker/marker.ts:25","marker/marker.ts:26","marker/marker.ts:27","marker/marker.ts:28","marker/marker.ts:29","marker/marker.ts:42","marker/marker.ts:87","markerel","match","math.random","maxbound","maximum","maxwidth","maxzoom","meta","metadata","method","metric","mi/ft","mind","minzoom","miscellan","mockcompon","mockcomponent(opt","model","model.createmarkerlayer(model.mark","model.getimage().subscrib","model.iconurl","model.lon","model.mark","models/attributionmodel","models/attributionmodel.t","models/attributionmodel.ts:1","models/attributionmodel.ts:11","models/attributionmodel.ts:12","models/path","models/path.t","models/path.ts:1","models/path.ts:11","models/path.ts:12","models/path.ts:13","models/path.ts:14","models/path.ts:15","models/path.ts:16","models/path.ts:17","models/path.ts:18","models/path.ts:19","models/path.ts:20","models/path.ts:21","models/path.ts:22","models/path.ts:24","models/polygon.t","models/polygon.ts:14","models/polygon.ts:18","models/polygon.ts:2","models/polygon.ts:3","models/scalemodel","models/scalemodel.t","models/scalemodel.ts:1","models/scalemodel.ts:11","models/scalemodel.ts:12","models/scalemodel.ts:13","models/scalemodel.ts:14","models/scalemodel.ts:15","models/zoommodel","models/zoommodel.t","models/zoommodel.ts:1","models/zoommodel.ts:11","models/zoommodel.ts:12","models/zoommodel.ts:13","models/zoommodel.ts:14","models/zoommodel.ts:15","modul","module.id","module.id.tostr","moduleid","mouseov","move","moveend","much","multi","multilinestr","multilinestring.coordinates.foreach(linestr","multipoint","multipoint.coordinates.foreach(point","multipolygon","multipolygon.coordinates.foreach(polygon","myicon","n","name","name.indexof","name.split('(')[0","nameindex","need","new","newguid","newlatlng","newlatlng.lat","newlatlng.lng","newnam","ngafterviewinit","ngdocheck","ngmodul","ngoninit","ngx.leaflet.compon","ngx.leaflet.componentsin","nice","node","npm","npm:ngx.leaflet.compon","null","number","obj","object","object.assign","object.keys(this.group).length","object.keys(this.layercontrolobject).length","observ","observable.create(observ","observable.throw('serv","observer.complet","observer.next(group","observer.next(this.basemap","observer.next(this.overlay","old","on","on('mouseout","onadd","onclick","onremov","opac","opt","option","options[key","originalobject","otherwis","out","outer","over","overlay","overlay.css","overlay.html","overlay.t","overlay.ts:16","overlay.ts:17","overlay.ts:18","overlay.ts:19","overlay.ts:20","overlay.ts:21","overlay.ts:28","overlays[key","overlays[key].foreach((el","overview","packag","parent","parseint(name.split('(')[1].split(')')[0","part","pass","path","path(nul","path(this.opt","pathinfo","pathinfo[key","pattern","pixel","plan","plugin.j","point","point[0","point[1","polygon","polygon.coordinates.foreach(polygonel","polygon.css","polygon.foreach(polygonel","polygon.html","polygon.push(this.hol","polygon.push(this.out","polygon/polygon.t","polygon/polygon.ts:23","polygon/polygon.ts:25","polygon/polygon.ts:26","polygon/polygon.ts:27","polygon/polygon.ts:28","polygon/polygon.ts:29","polygon/polygon.ts:30","polygon/polygon.ts:44","polygon/polygon.ts:65","polygon/polygon.ts:76","polygonel","polygonelement.foreach(point","polylin","polyline.css","polyline.html","polyline/polyline.t","polyline/polyline.ts:22","polyline/polyline.ts:23","polyline/polyline.ts:24","polyline/polyline.ts:25","polyline/polyline.ts:26","polyline/polyline.ts:27","polyline/polyline.ts:28","polyline/polyline.ts:42","polyline/polyline.ts:65","polyline/polyline.ts:76","polylineel","popup","popup.addto(map","popup.css","popup.html","popup/popup.t","popup/popup.ts:18","popup/popup.ts:19","popup/popup.ts:20","popup/popup.ts:30","popupanchor","popupel","popupservic","posit","possibl","power","preced","prefix","privat","problem","proj4","project","properli","properti","provid","public","pull","r","radiu","re","reader","reader.onload","reader.readasdataurl(image.blob","reader.result","readm","realli","refreshoverlay","refreshoverlays(remov","regist","remove._leaflet_id","render","replac","reproject","request","requestmethod","requestopt","requir","reset","respons","responsecontenttyp","responsecontenttype.blob","responsetyp","result","return","revert","right","round","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/rx","salesman","same","save","scale","scale.css","scale.html","scalecontrol","scalemodel","scalemodel(nul","seem","selector","self","self.watermarkurl","services/globalid.servic","services/globalid.service.t","services/globalid.service.ts:5","services/globalid.service.ts:9","services/group.servic","services/group.service.t","services/group.service.ts:10","services/group.service.ts:11","services/group.service.ts:12","services/group.service.ts:16","services/group.service.ts:47","services/group.service.ts:55","services/group.service.ts:59","services/group.service.ts:63","services/group.service.ts:9","services/helper.servic","services/helper.service.t","services/helper.service.ts:5","services/helper.service.ts:9","services/map.servic","services/map.service.t","services/map.service.ts:10","services/map.service.ts:100","services/map.service.ts:107","services/map.service.ts:11","services/map.service.ts:12","services/map.service.ts:120","services/map.service.ts:124","services/map.service.ts:128","services/map.service.ts:13","services/map.service.ts:14","services/map.service.ts:15","services/map.service.ts:19","services/map.service.ts:22","services/map.service.ts:26","services/map.service.ts:29","services/map.service.ts:33","services/map.service.ts:45","services/map.service.ts:58","services/map.service.ts:8","services/map.service.ts:85","services/map.service.ts:89","services/map.service.ts:9","services/map.service.ts:93","services/popup.servic","services/popup.service.t","services/popup.service.ts:5","services/popup.service.ts:9","set","setlatlng([this.lat","setlayercontrol","setlayercontrol(st","setmap","setmap(map","setnewlatlng","setnewlatlng(newlatlng","setopacity(this.opac","shape","shouldn't","show","shown","simpl","slippylay","solv","sourc","specif","splitcr","splitcrs[0","star","start","state","statement","string","stroke","stylesheet","styleurl","super","super.assigncartesianarraytoleafletslatlngschema","super.assigncartesianpointtoleafletslatlngschema","super.transformarraycoordinates(this.leafletelement.cr","super.transformjsoncoordinates(this.geojson","super.transformpointcoordinates(this.cr","super.transformpointcoordinates(this.leafletelement.cr","support","svg","system","systemj","take","templat","templateurl","test","test/main.test.t","test/mock.component.t","text","textinput","textnod","textnode.nodevalu","that","thing","this.addbasemap(basemap","this.addcontrol","this.addoverlay(overlay","this.arraycompare(a[i","this.attribut","this.basemap","this.basemaps[nam","this.bound","this.bounds).setopacity(this.opac","this.circl","this.circle.addto(map","this.closepopup","this.cr","this.createmarkerlayer(this.mark","this.crs.split","this.elementtext.nativeelement.childnodes.length","this.elementtext.nativeelement.childnodes[0","this.geojson","this.getgroup","this.getmap","this.getoverlay","this.getoverlays()).addto(map","this.getuniquename(nam","this.globalid","this.group","this.group.addlayer(overlay","this.group.addto(map","this.groupidentifiers.indexof(gid","this.groupidentifiers.push(gid","this.groupnames.indexof(nam","this.groupnames.push(nam","this.groupnames[index","this.groupservice.addolayerstogroup(gjson","this.groupservice.addolayerstogroup(mark","this.groupservice.addolayerstogroup(popup","this.groupservice.addolayerstogroup(this.circl","this.groupservice.addolayerstogroup(this.polygon","this.groupservice.addolayerstogroup(this.polylin","this.guidservice.newguid","this.helperservice.arraycompare(this.originalobject","this.hol","this.http.get(this.iconurl","this.i","this.iconurl","this.imageexists(this.iconurl","this.lat","this.latlng","this.layercontrol","this.layercontrolflag","this.layercontrolobject","this.layercontrolobject.getcontainer().innerhtml","this.layergroup","this.layergroup.push(overlay","this.layergroup[this.layerid.indexof(gid","this.layergroupnumb","this.layerid.indexof(gid","this.layerid.push(gid","this.layersincontrolnumb","this.leafletel","this.leafletelement.cr","this.leafletgroup","this.lon","this.lon]).setcontent(this.cont","this.map","this.mapelement.nativeelement.mymapproperti","this.mapservic","this.mapservice.addbasemap(lay","this.mapservice.addoverlay(lay","this.mapservice.getmap","this.mapservice.getoverlays()).addto(map","this.mapservice.increasenumb","this.mapservice.setlayercontrol(this.layercontrol","this.mapservice.setmap(map","this.mark","this.maxbound","this.maxzoom","this.minzoom","this.nam","this.onclick","this.openpopup","this.options.fil","this.originalobject","this.out","this.overlay","this.overlays[existing_nam","this.overlays[nam","this.polygon","this.polygon.addto(map","this.polylin","this.polyline.addto(map","this.popupservice.enablepopup(this.mouseov","this.radiu","this.slippylay","this.transformjsoncoordinates(featur","this.transformjsoncoordinates(feature.geometri","this.transformjsoncoordinates(geometri","this.transformpointcoordinates(point","this.transformpointcoordinates(point.coordin","this.typ","this.watermarkurl","this.wmslay","this.x","this.xi","this.zoom","this.zoomcontrol","this[key","time","titl","todo","topleft","topright","transformarraycoordin","transformarraycoordinates(cr","transformjsoncoordin","transformjsoncoordinates(geojson","transformpointcoordin","transformpointcoordinates(cr","transformpointcoordinates(point","transpil","travel","tree","tri","true","ts","two","type","typeof","typescript","typescript.j","undefin","unknown","unproject","up","updat","updatewhenidl","url","urlencod","us","usag","v","v.tostring(16","v1.x","valu","var","variabl","viewchild","viewchild('map","void","watermark","watermark.css","watermark.html","watermarkcompon","watermarkurl","way","weight","wgs84","whether","width","wiki","window.url.createobjecturl(image.blob","wm","wmslayer","work","www","x","xxxx","xxxxxxxx","xxxxxxxxxxxx'.replace(/[xy]/g","xy","y","yourself","yxxx","zoom","zoom.css","zoom.html","zoomcontrol","zoomintext","zoomintitl","zoommodel","zoommodel(nul","zoomouttext","zoomouttitl"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nngx.leaflet.component  \nmy own attemp on creating an Angular io leaflet v1.x component\nLive examples\n\nbase example https://elasticrash.github.io/Angular.io.MapViewer/example/\nmulti-map example https://elasticrash.github.io/Angular.io.MapViewer/example/#/mm-map\nstar map using L.CRS.Simple https://elasticrash.github.io/Angular.io.MapViewer/example/#/simple\ncustom CRS using leaflet https://elasticrash.github.io/Angular.io.MapViewer/example/#/prj\na simple genetic algorithm trying to solve the Travelling salesman problem https://elasticrash.github.io/Angular.io.MapViewer/example/#/random\n\nall examples sources code can be found here\nBare in mind that I just started developing this and I don't have much time to plan things aheadmainly due to not enough free time, so I am making changes as I go\nInstall\nnpm install ngx.leaflet.componentsin SystemJs use the following configuration\n    transpiler: 'typescript',\n    map: {\n        'ngx.leaflet.components': 'npm:ngx.leaflet.components',\n    },\n    packages: {\n              'ngx.leaflet.components': {\n        main: './index',\n        defaultExtension: 'js',\n        meta: {\n          \"format\": \"register\"\n        }\n      }\n    },\n    \"ts\": {\n        \"main\": \"plugin.js\"\n      },\n      \"typescript\": {\n        \"main\": \"typescript.js\",\n        \"meta\": {\n          \"lib/typescript.js\": {\n            \"exports\": \"ts\"\n          }\n        }\n      }I haven't tested it with other transpilers save for typescript, thats why I am including it on the SystemJs config\nthen on you app module include this\nimport { CandTLeafletComponent  } from 'ngx.leaflet.components';\nimport { CandTLeafletService } from 'ngx.leaflet.components';\nimport { AppComponent } from './components/app.component';\n\n@NgModule({\n  imports: [... ],\n  declarations: [..., CandTLeafletComponent],\n  providers: [CandTLeafletService],\n  bootstrap: [AppComponent]\n})Leaflet stylesheet is not included, so you need to add it yourself\nfor usage check the wiki\nhttps://github.com/elasticrash/ngx.leaflet.component/wiki\nIf anyone wants to help in any way feel free to do a fork and a pull request\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        15 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AttributionControl.html":{"url":"components/AttributionControl.html","title":"component - AttributionControl","body":"\n                   \n\n\n\n  Components\n  AttributionControl\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    map/attribution/attribution.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n\n\n            \n                selector\n                attribution-control\n            \n\n            \n                styleUrls\n                attribution.css\n            \n\n\n\n            \n                templateUrl\n                attribution.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            Options\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in map/attribution/attribution.ts:15\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService, LeafletElement: LeafletElement)\n                        \n                    \n                        \n                            \n                                Defined in map/attribution/attribution.ts:15\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in map/attribution/attribution.ts:20\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n    \n        import { Component, Input, Injector, Optional } from '@angular/core';\r\nimport { LeafletElement } from '../map';\r\nimport { MapService } from '../services/map.service';\r\nimport { attributionModel } from '../models/attributionModel';\r\nimport * as L from 'leaflet';\r\n\r\n\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    selector: 'attribution-control',\r\n    templateUrl: 'attribution.html',\r\n    styleUrls: ['attribution.css']\r\n})\r\nexport class AttributionControl {\r\n    @Input() Options: any = new attributionModel(null);\r\n    constructor(\r\n        private mapService: MapService,\r\n        @Optional() private LeafletElement?: LeafletElement) { }\r\n        \r\n    ngOnInit() {\r\n        if (this.LeafletElement) {\r\n            let map = this.mapService.getMap();\r\n            L.control.attribution(this.Options).addTo(map);\r\n        } else {\r\n            console.warn(\"This attribution-control will not be rendered \\n the expected parent node of attribution-control should be either leaf-element or layer-element\");\r\n        }\r\n    }\r\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AttributionControl'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CircleElement.html":{"url":"components/CircleElement.html","title":"component - CircleElement","body":"\n                   \n\n\n\n  Components\n  CircleElement\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    circle/circle.ts\n\n\n\n    \n        Extends\n    \n    \n            CoordinateHandler\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n\n\n            \n                selector\n                circle-element\n            \n\n            \n                styleUrls\n                circle.css\n            \n\n\n\n            \n                templateUrl\n                circle.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            lat\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: 52.6\n                            \n                        \n                    \n                        \n                            \n                                Defined in circle/circle.ts:21\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            lon\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in circle/circle.ts:22\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            mouseover\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: undefined\n                            \n                        \n                    \n                        \n                            \n                                Defined in circle/circle.ts:24\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            onclick\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: undefined\n                            \n                        \n                    \n                        \n                            \n                                Defined in circle/circle.ts:25\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Options\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in circle/circle.ts:26\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            radius\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: 20\n                            \n                        \n                    \n                        \n                            \n                                Defined in circle/circle.ts:23\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService, groupService: GroupService, popupService: PopupService, elementText: ElementRef, LeafletElement: LeafletElement, LeafletGroup: LeafletGroup)\n                        \n                    \n                        \n                            \n                                Defined in circle/circle.ts:27\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in circle/circle.ts:39\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ngAfterViewInit\n                        \n                    \n                    \n                        \n    ngAfterViewInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in circle/circle.ts:61\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                             circle\n                        \n                    \n                    \n                        \n                            circle:     any\n    \n                        \n                    \n                        \n                            \n                                Defined in circle/circle.ts:27\n                            \n                        \n                \n            \n    \n\n\n\n    \n        import { Component, Input, Injector, Optional, ElementRef } from '@angular/core';\r\nimport { LeafletElement } from '../map/map';\r\nimport { LeafletGroup } from '../group/group';\r\nimport { MapService } from '../services/map.service';\r\nimport { GroupService } from '../services/group.service';\r\nimport { PopupService } from '../services/popup.service';\r\nimport { CoordinateHandler } from '../helpers/coodinateHandler';\r\nimport { path } from '../models/path';\r\nimport { Ipath } from '../interfaces/path';\r\nimport * as L from 'leaflet';\r\n\r\n\r\n@Component({\r\n  moduleId: module.id.toString(),\r\n  selector: 'circle-element',\r\n  templateUrl: 'circle.html',\r\n  styleUrls: ['circle.css']\r\n})\r\n\r\nexport class CircleElement extends CoordinateHandler {\r\n  @Input() lat: number = 52.6;\r\n  @Input() lon: number = -1.1;\r\n  @Input() radius: number = 20;\r\n  @Input() mouseover: string = undefined;\r\n  @Input() onclick: string = undefined;\r\n  @Input() Options: any = new path(null);\r\n  circle: any = null;\r\n\r\n  constructor(\r\n    private mapService: MapService,\r\n    private groupService: GroupService,\r\n    private popupService: PopupService,\r\n    private elementText: ElementRef,\r\n    @Optional() private LeafletElement?: LeafletElement,\r\n    @Optional() private LeafletGroup?: LeafletGroup) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.assignCartesianPointToLeafletsLatLngSchema();\r\n\r\n    //check if any of the two optional injections exist\r\n    if (this.LeafletElement || this.LeafletGroup) {\r\n      let inheritedOptions: any = new path(this.Options);\r\n      let map = this.mapService.getMap();\r\n\r\n      super.transformPointCoordinates(this.LeafletElement.crs);\r\n\r\n      this.circle = L.circle([this.lat, this.lon], this.radius, inheritedOptions);\r\n\r\n      if (this.LeafletGroup) {\r\n        this.groupService.addOLayersToGroup(this.circle, map, this.mapService, this.LeafletGroup);\r\n      } else {\r\n        this.circle.addTo(map);\r\n      }\r\n    } else {\r\n      console.warn(\"This circle-element will not be rendered \\n the expected parent node of circle-element should be either leaf-element or leaflet-group\");\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.LeafletElement || this.LeafletGroup) {\r\n    var textInput = undefined;\r\n    if (this.elementText.nativeElement.childNodes.length > 0) {\r\n      var textNode = this.elementText.nativeElement.childNodes[0];\r\n      textInput = textNode.nodeValue;\r\n    }\r\n\r\n    //add popup methods on element\r\n    this.popupService.enablePopup(this.mouseover, this.onclick, this.circle, textInput);\r\n    }\r\n  }\r\n}\r\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CircleElement'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CircleMarkerElement.html":{"url":"components/CircleMarkerElement.html","title":"component - CircleMarkerElement","body":"\n                   \n\n\n\n  Components\n  CircleMarkerElement\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    circlemarker/circlemarker.ts\n\n\n\n    \n        Extends\n    \n    \n            CoordinateHandler\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n\n\n            \n                selector\n                circle-marker-element\n            \n\n            \n                styleUrls\n                circlemarker.css\n            \n\n\n\n            \n                templateUrl\n                circlemarker.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            lat\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: 52.6\n                            \n                        \n                    \n                        \n                            \n                                Defined in circlemarker/circlemarker.ts:21\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            lon\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in circlemarker/circlemarker.ts:22\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            mouseover\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: undefined\n                            \n                        \n                    \n                        \n                            \n                                Defined in circlemarker/circlemarker.ts:23\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            onclick\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: undefined\n                            \n                        \n                    \n                        \n                            \n                                Defined in circlemarker/circlemarker.ts:24\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Options\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in circlemarker/circlemarker.ts:25\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService, groupService: GroupService, popupService: PopupService, elementText: ElementRef, LeafletElement: LeafletElement, LeafletGroup: LeafletGroup)\n                        \n                    \n                        \n                            \n                                Defined in circlemarker/circlemarker.ts:26\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in circlemarker/circlemarker.ts:38\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ngAfterViewInit\n                        \n                    \n                    \n                        \n    ngAfterViewInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in circlemarker/circlemarker.ts:59\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                             circle\n                        \n                    \n                    \n                        \n                            circle:     any\n    \n                        \n                    \n                        \n                            \n                                Defined in circlemarker/circlemarker.ts:26\n                            \n                        \n                \n            \n    \n\n\n\n    \n        import { Component, Input, Injector, Optional, ElementRef } from '@angular/core';\r\nimport { LeafletElement } from '../map/map';\r\nimport { LeafletGroup } from '../group/group';\r\nimport { MapService } from '../services/map.service';\r\nimport { GroupService } from '../services/group.service';\r\nimport { PopupService } from '../services/popup.service';\r\nimport { CoordinateHandler } from '../helpers/coodinateHandler';\r\nimport { path } from '../models/path';\r\nimport { Ipath } from '../interfaces/path';\r\nimport * as L from 'leaflet';\r\n\r\n\r\n@Component({\r\n  moduleId: module.id.toString(),\r\n  selector: 'circle-marker-element',\r\n  templateUrl: 'circlemarker.html',\r\n  styleUrls: ['circlemarker.css']\r\n})\r\n\r\nexport class CircleMarkerElement extends CoordinateHandler {\r\n  @Input() lat: number = 52.6;\r\n  @Input() lon: number = -1.1;\r\n  @Input() mouseover: string = undefined;\r\n  @Input() onclick: string = undefined;\r\n  @Input() Options: any = new path(null);\r\n  circle: any = null;\r\n\r\n  constructor(\r\n    private mapService: MapService,\r\n    private groupService: GroupService,\r\n    private popupService: PopupService,\r\n    private elementText: ElementRef,\r\n    @Optional() private LeafletElement?: LeafletElement,\r\n    @Optional() private LeafletGroup?: LeafletGroup) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.assignCartesianPointToLeafletsLatLngSchema();\r\n    //check if any of the two optional injections exist\r\n    if (this.LeafletElement || this.LeafletGroup) {\r\n      let inheritedOptions: any = new path(this.Options);\r\n      let map = this.mapService.getMap();\r\n\r\n      let elementPosition: any = super.transformPointCoordinates(this.LeafletElement.crs);\r\n      \r\n      this.circle = L.circleMarker([this.lat, this.lon], inheritedOptions);\r\n\r\n      if (this.LeafletGroup) {\r\n        this.groupService.addOLayersToGroup(this.circle, map, this.mapService, this.LeafletGroup);\r\n      } else {\r\n        this.circle.addTo(map);\r\n      }\r\n    } else {\r\n      console.warn(\"This circle-element will not be rendered \\n the expected parent node of circle-element should be either leaf-element or leaflet-group\");\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    var textInput = undefined;\r\n    if (this.elementText.nativeElement.childNodes.length > 0) {\r\n      var textNode = this.elementText.nativeElement.childNodes[0];\r\n      textInput = textNode.nodeValue;\r\n    }\r\n\r\n    //add popup methods on element\r\n    this.popupService.enablePopup(this.mouseover, this.onclick, this.circle, textInput);\r\n  }\r\n}\r\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CircleMarkerElement'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeoJsonElement.html":{"url":"components/GeoJsonElement.html","title":"component - GeoJsonElement","body":"\n                   \n\n\n\n  Components\n  GeoJsonElement\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    geojson/geojson.ts\n\n\n\n    \n        Extends\n    \n    \n            GeoJSONCoordinateHandler\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n\n\n            \n                selector\n                geojson-element\n            \n\n            \n                styleUrls\n                geojson.css\n            \n\n\n\n            \n                templateUrl\n                geojson.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService, groupService: GroupService, popupService: PopupService, guidService: GuidService, helperService: HelperService, LeafletElement: LeafletElement, LeafletGroup: LeafletGroup)\n                        \n                    \n                        \n                            \n                                Defined in geojson/geojson.ts:22\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in geojson/geojson.ts:35\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ngDoCheck\n                        \n                    \n                    \n                        \n    ngDoCheck()\n                        \n                    \n    \n                        \n                            \n                                Defined in geojson/geojson.ts:60\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                             globalId\n                        \n                    \n                    \n                        \n                            globalId:     string\n    \n                        \n                    \n                        \n                            \n                                Defined in geojson/geojson.ts:22\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             originalObject\n                        \n                    \n                    \n                        \n                            originalObject:     any\n    \n                        \n                    \n                        \n                            \n                                Defined in geojson/geojson.ts:21\n                            \n                        \n                \n            \n    \n\n\n\n    \n        import { Component, Input, Injector, Optional } from '@angular/core';\r\nimport { LeafletElement } from '../map/map';\r\nimport { LeafletGroup } from '../group/group';\r\nimport { MapService } from '../services/map.service';\r\nimport { GroupService } from '../services/group.service';\r\nimport { PopupService } from '../services/popup.service';\r\nimport { GuidService } from '../services/globalId.service';\r\nimport { HelperService } from '../services/helper.service';\r\nimport { GeoJSONCoordinateHandler } from '../helpers/geoJsonReader';\r\n\r\nimport * as L from 'leaflet';\r\n\r\n@Component({\r\n  moduleId: module.id.toString(),\r\n  selector: 'geojson-element',\r\n  templateUrl: 'geojson.html',\r\n  styleUrls: ['geojson.css']\r\n})\r\n\r\nexport class GeoJsonElement extends GeoJSONCoordinateHandler {\r\n  originalObject: any = Object.assign({}, this.geojson);\r\n  globalId: string = this.guidService.newGuid();\r\n\r\n  constructor(\r\n    private mapService: MapService,\r\n    private groupService: GroupService,\r\n    private popupService: PopupService,\r\n    private guidService: GuidService,\r\n    private helperService: HelperService,\r\n    @Optional() private LeafletElement?: LeafletElement,\r\n    @Optional() private LeafletGroup?: LeafletGroup) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    //check if any of the two optional injections exist\r\n    if (this.LeafletElement || this.LeafletGroup) {\r\n      //polyline shouldn't have a fill\r\n      let map = this.mapService.getMap();\r\n\r\n      if (this.geojson) {\r\n        super.transformJSONCoordinates(this.geojson, this.LeafletElement.crs);\r\n\r\n        let gjson = L.geoJSON(this.geojson);\r\n\r\n        if (this.LeafletGroup) {\r\n          this.groupService.addOLayersToGroup(gjson, map, this.mapService, this.LeafletGroup, false, this.globalId);\r\n        } else {\r\n          gjson.addTo(map);\r\n        }\r\n      } else {\r\n        console.warn(\"geojson object seems to be undefined\");\r\n      }\r\n    } else {\r\n      console.warn(\"This polyline-element will not be rendered \\n the expected parent node of polyline-element should be either leaf-element or leaflet-group\");\r\n    }\r\n\r\n  }\r\n\r\n  ngDoCheck() {\r\n    let map = this.mapService.getMap();\r\n  }\r\n}\r\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GeoJsonElement'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageOverlayElement.html":{"url":"components/ImageOverlayElement.html","title":"component - ImageOverlayElement","body":"\n                   \n\n\n\n  Components\n  ImageOverlayElement\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    imageoverlay/image-overlay.ts\n\n\n\n    \n        Extends\n    \n    \n            CoordinateHandler\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n\n\n            \n                selector\n                image-overlay-element\n            \n\n            \n                styleUrls\n                image-overlay.css\n            \n\n\n\n            \n                templateUrl\n                image-overlay.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            bounds\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in imageoverlay/image-overlay.ts:16\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            imagepath\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in imageoverlay/image-overlay.ts:17\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            name\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in imageoverlay/image-overlay.ts:18\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            opacity\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: 1\n                            \n                        \n                    \n                        \n                            \n                                Defined in imageoverlay/image-overlay.ts:19\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            type\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: overlay\n                            \n                        \n                    \n                        \n                            \n                                Defined in imageoverlay/image-overlay.ts:20\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService, LeafletElement: LeafletElement)\n                        \n                    \n                        \n                            \n                                Defined in imageoverlay/image-overlay.ts:21\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in imageoverlay/image-overlay.ts:28\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                             latlngs\n                        \n                    \n                    \n                        \n                            latlngs:     any\n    \n                        \n                    \n                        \n                            \n                                Defined in imageoverlay/image-overlay.ts:21\n                            \n                        \n                \n            \n    \n\n\n\n    \n        import { Component, Input, Optional } from '@angular/core';\r\nimport { LeafletElement } from '../map/map';\r\nimport { MapService } from '../services/map.service';\r\nimport { CoordinateHandler } from '../helpers/coodinateHandler';\r\nimport * as L from 'leaflet';\r\n\r\n\r\n@Component({\r\n  moduleId: module.id.toString(),\r\n  selector: 'image-overlay-element',\r\n  templateUrl: 'image-overlay.html',\r\n  styleUrls: ['image-overlay.css']\r\n})\r\n\r\nexport class ImageOverlayElement extends CoordinateHandler {\r\n  @Input() bounds: any = [[-26.5, -25], [1021.5, 1023]];\r\n  @Input() imagepath: string = '';\r\n  @Input() name: string = '';\r\n  @Input() opacity: number = 1;\r\n  @Input() type: string = 'overlay'\r\n  latlngs: any;\r\n\r\n  constructor(private mapService: MapService,\r\n    @Optional() private LeafletElement?: LeafletElement) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.latlngs = this.bounds;\r\n    \r\n    if (this.LeafletElement) {\r\n      let map = this.mapService.getMap();\r\n      super.transformArrayCoordinates(this.LeafletElement.crs);\r\n\r\n      let layer = null;\r\n\r\n      layer = L.imageOverlay(this.imagepath, this.bounds).setOpacity(this.opacity);\r\n\r\n      if (layer !== {}) {\r\n        if (this.type === \"overlay\") {\r\n          this.mapService.addOverlay(layer, this.name);\r\n          layer.addTo(map);\r\n        } else if (this.type === \"basemap\") {\r\n          this.mapService.addBasemap(layer, this.name);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageOverlayElement'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayerElement.html":{"url":"components/LayerElement.html","title":"component - LayerElement","body":"\n                   \n\n\n\n  Components\n  LayerElement\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    layer/layer.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n\n\n            \n                selector\n                layer-element\n            \n\n            \n                styleUrls\n                layer.css\n            \n\n\n\n            \n                templateUrl\n                layer.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            attribution\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in layer/layer.ts:19\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            name\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in layer/layer.ts:16\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            opacity\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: 1\n                            \n                        \n                    \n                        \n                            \n                                Defined in layer/layer.ts:17\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            slippyLayer\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in layer/layer.ts:14\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            type\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: overlay\n                            \n                        \n                    \n                        \n                            \n                                Defined in layer/layer.ts:18\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            wmsLayer\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in layer/layer.ts:15\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService)\n                        \n                    \n                        \n                            \n                                Defined in layer/layer.ts:19\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in layer/layer.ts:24\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\r\nimport { MapService } from '../services/map.service';\r\nimport * as L from 'leaflet';\r\n\r\n\r\n@Component({\r\n  moduleId: module.id.toString(),\r\n  selector: 'layer-element',\r\n  templateUrl: 'layer.html',\r\n  styleUrls: ['layer.css']\r\n})\r\n\r\nexport class LayerElement {\r\n  @Input() slippyLayer: string = '';\r\n  @Input() wmsLayer: string = '';\r\n  @Input() name: string = '';\r\n  @Input() opacity: number = 1;\r\n  @Input() type: string = 'overlay';\r\n  @Input() attribution: string = null;\r\n\r\n  constructor(private mapService: MapService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mapService.increaseNumber();\r\n    let map = this.mapService.getMap();\r\n    let layer = null;\r\n    if (this.slippyLayer !== \"\") {\r\n      layer = L.tileLayer(this.slippyLayer, {\r\n        attribution: this.attribution,\r\n      });\r\n    }\r\n    if (this.wmsLayer !== \"\" && this.name !== \"\") {\r\n      layer = L.tileLayer.wms(this.wmsLayer, {\r\n        layers: this.name,\r\n        attribution: this.attribution\r\n      }).setOpacity(this.opacity);\r\n    }\r\n\r\n    if (layer !== {}) {\r\n      if (this.type === \"overlay\") {\r\n        this.mapService.addOverlay(layer, this.name);\r\n        layer.addTo(map);\r\n      } else if (this.type === \"basemap\") {\r\n        this.mapService.addBasemap(layer, this.name);\r\n        layer.addTo(map);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayerElement'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeafletElement.html":{"url":"components/LeafletElement.html","title":"component - LeafletElement","body":"\n                   \n\n\n\n  Components\n  LeafletElement\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    map/map.ts\n\n\n\n    \n        Extends\n    \n    \n            CoordinateHandler\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n            \n                providers\n                \n                    \n                        MapService\n                    \n                \n            \n\n\n            \n                selector\n                leaf-element\n            \n\n            \n                styleUrls\n                map.css\n            \n\n\n\n            \n                templateUrl\n                map.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            crs\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in map/map.ts:21\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            lat\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: 52.6\n                            \n                        \n                    \n                        \n                            \n                                Defined in map/map.ts:15\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            layerControl\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                            \n                              Default value: false\n                            \n                        \n                    \n                        \n                            \n                                Defined in map/map.ts:20\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            lon\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in map/map.ts:16\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            maxBounds\n                        \n                        \n                              \n                                Type:    LatLngBounds\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in map/map.ts:23\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            maxZoom\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: 19\n                            \n                        \n                    \n                        \n                            \n                                Defined in map/map.ts:19\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            minZoom\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: 4\n                            \n                        \n                    \n                        \n                            \n                                Defined in map/map.ts:18\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            zoom\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: 12\n                            \n                        \n                    \n                        \n                            \n                                Defined in map/map.ts:17\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            zoomControl\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in map/map.ts:22\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService)\n                        \n                    \n                        \n                            \n                                Defined in map/map.ts:26\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in map/map.ts:32\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ngAfterViewInit\n                        \n                    \n                    \n                        \n    ngAfterViewInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in map/map.ts:66\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setLayerControl\n                        \n                    \n                    \n                        \n    setLayerControl()\n                        \n                    \n    \n                        \n                            \n                                Defined in map/map.ts:69\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                             layerControlObject\n                        \n                    \n                    \n                        \n                            layerControlObject:     any\n    \n                        \n                    \n                        \n                            \n                                Defined in map/map.ts:26\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             mapElement\n                        \n                    \n                    \n                        \n                            mapElement:     ElementRef\n    \n                        \n                    \n                        \n                            \n                                Defined in map/map.ts:24\n                            \n                        \n                \n            \n    \n\n\n\n    \n        import { Component, Input, ViewChild, ElementRef, EventEmitter } from '@angular/core';\r\nimport { MapService } from '../services/map.service';\r\nimport { CoordinateHandler } from '../helpers/coodinateHandler';\r\nimport * as L from 'leaflet';\r\n\r\n@Component({\r\n  moduleId: module.id.toString(),\r\n  selector: 'leaf-element',\r\n  templateUrl: 'map.html',\r\n  styleUrls: ['map.css'],\r\n  providers: [MapService]\r\n})\r\n\r\nexport class LeafletElement extends CoordinateHandler {\r\n  @Input() lat: number = 52.6;\r\n  @Input() lon: number = -1.1;\r\n  @Input() zoom: number = 12;\r\n  @Input() minZoom: number = 4;\r\n  @Input() maxZoom: number = 19;\r\n  @Input() layerControl: boolean = false;\r\n  @Input() crs: any = L.CRS.EPSG3857;\r\n  @Input() zoomControl: boolean;\r\n  @Input() maxBounds: L.LatLngBounds = null;\r\n  @ViewChild('map') mapElement: ElementRef;\r\n\r\n  layerControlObject = null;\r\n\r\n  constructor(private mapService: MapService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.assignCartesianPointToLeafletsLatLngSchema();\r\n\r\n    if (typeof (this.crs) === \"string\") {\r\n      var splitCrs = this.crs.split(\".\");\r\n      if (splitCrs[0] === \"L\") {\r\n        this.crs = L[splitCrs[1]][splitCrs[2]];\r\n      } else {\r\n        console.warn(\"something is not right, reverting to default EPSG3857\");\r\n        this.crs = L.CRS.EPSG3857;\r\n      }\r\n    }\r\n\r\n    super.transformPointCoordinates(this.crs);\r\n\r\n    let map = L.map(this.mapElement.nativeElement, {\r\n      crs: this.crs,\r\n      zoomControl: this.zoomControl,\r\n      center: L.latLng(this.lat, this.lon),\r\n      zoom: this.zoom,\r\n      minZoom: this.minZoom,\r\n      maxZoom: this.maxZoom,\r\n      maxBounds: this.maxBounds,\r\n      layers: [],\r\n      closePopupOnClick: false,\r\n      attributionControl: false\r\n    });\r\n    this.mapElement.nativeElement.myMapProperty = map;\r\n\r\n    //set variables for childrent components\r\n    this.mapService.setMap(map);\r\n    this.mapService.setLayerControl(this.layerControl);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  setLayerControl() {\r\n    if (this.layerControl) {\r\n      let map = this.mapService.getMap();\r\n      if (this.layerControlObject !== null) {\r\n        this.layerControlObject.getContainer().innerHTML = '';\r\n      }\r\n      this.layerControlObject = L.control.layers(this.mapService.getBasemaps(), this.mapService.getOverlays()).addTo(map);\r\n    }\r\n  }\r\n}\r\n\n    \n\n    \n        \r\n\t\r\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t'\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeafletElement'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeafletGroup.html":{"url":"components/LeafletGroup.html","title":"component - LeafletGroup","body":"\n                   \n\n\n\n  Components\n  LeafletGroup\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    group/group.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n            \n                providers\n                \n                    \n                        GroupService\n                    \n                \n            \n\n\n            \n                selector\n                leaflet-group\n            \n\n            \n                styleUrls\n                group.css\n            \n\n\n\n            \n                templateUrl\n                group.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            name\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in group/group.ts:17\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService, groupService: GroupService, guidService: GuidService)\n                        \n                    \n                        \n                            \n                                Defined in group/group.ts:18\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in group/group.ts:26\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ngAfterViewInit\n                        \n                    \n                    \n                        \n    ngAfterViewInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in group/group.ts:29\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                             globalId\n                        \n                    \n                    \n                        \n                            globalId:     string\n    \n                        \n                    \n                        \n                            \n                                Defined in group/group.ts:18\n                            \n                        \n                \n            \n    \n\n\n\n    \n        import { Component, Input } from '@angular/core';\r\nimport { MapService } from '../services/map.service';\r\nimport { GroupService } from '../services/group.service';\r\nimport { GuidService } from '../services/globalId.service';\r\nimport * as L from 'leaflet';\r\n\r\n\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    selector: 'leaflet-group',\r\n    templateUrl: 'group.html',\r\n    styleUrls: ['group.css'],\r\n    providers: [GroupService]\r\n})\r\n\r\nexport class LeafletGroup {\r\n    @Input() name: string = '';\r\n    globalId: string = this.guidService.newGuid();\r\n\r\n    constructor(\r\n        private mapService: MapService,\r\n        private groupService: GroupService,\r\n        private guidService: GuidService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n}\r\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeafletGroup'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkerElement.html":{"url":"components/MarkerElement.html","title":"component - MarkerElement","body":"\n                   \n\n\n\n  Components\n  MarkerElement\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    marker/marker.ts\n\n\n\n    \n        Extends\n    \n    \n            CoordinateHandler\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n            \n                providers\n                \n                    \n                        PopupService\n                    \n                \n            \n\n\n            \n                selector\n                marker-element\n            \n\n            \n                styleUrls\n                marker.css\n            \n\n\n\n            \n                templateUrl\n                marker.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            iconUrl\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in marker/marker.ts:28\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            lat\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: 52.6\n                            \n                        \n                    \n                        \n                            \n                                Defined in marker/marker.ts:24\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            lon\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in marker/marker.ts:25\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            mouseover\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: undefined\n                            \n                        \n                    \n                        \n                            \n                                Defined in marker/marker.ts:26\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            onclick\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: undefined\n                            \n                        \n                    \n                        \n                            \n                                Defined in marker/marker.ts:27\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService, groupService: GroupService, popupService: PopupService, http: Http, elementText: ElementRef, LeafletElement: LeafletElement, LeafletGroup: LeafletGroup)\n                        \n                    \n                        \n                            \n                                Defined in marker/marker.ts:29\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in marker/marker.ts:42\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             createMarkerlayer\n                        \n                    \n                    \n                        \n    createMarkerlayer(marker: any, map: any)\n                        \n                    \n    \n                        \n                            \n                                Defined in marker/marker.ts:87\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             imageExists\n                        \n                    \n                    \n                        \n    imageExists(url: any, callback: any)\n                        \n                    \n    \n                        \n                            \n                                Defined in marker/marker.ts:105\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getImage\n                        \n                    \n                    \n                        \n    getImage()\n                        \n                    \n    \n                        \n                            \n                                Defined in marker/marker.ts:112\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                             marker\n                        \n                    \n                    \n                        \n                            marker:     any\n    \n                        \n                    \n                        \n                            \n                                Defined in marker/marker.ts:29\n                            \n                        \n                \n            \n    \n\n\n\n    \n        import { Component, Input, Injector, Optional, ElementRef } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions, Request, RequestMethod, ResponseContentType } from '@angular/http';\r\nimport { MapService } from '../services/map.service';\r\nimport { GroupService } from '../services/group.service';\r\nimport { PopupService } from '../services/popup.service';\r\nimport { LeafletElement } from '../map/map';\r\nimport { LeafletGroup } from '../group/group';\r\nimport { CoordinateHandler } from '../helpers/coodinateHandler';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport * as L from 'leaflet';\r\n\r\n@Component({\r\n  moduleId: module.id.toString(),\r\n  selector: 'marker-element',\r\n  templateUrl: 'marker.html',\r\n  styleUrls: ['marker.css'],\r\n  providers: [PopupService]\r\n})\r\n\r\nexport class MarkerElement extends CoordinateHandler {\r\n  @Input() lat: number = 52.6;\r\n  @Input() lon: number = -1.1;\r\n  @Input() mouseover: string = undefined;\r\n  @Input() onclick: string = undefined;\r\n  @Input() iconUrl: string = \"\";\r\n  marker: any = null;\r\n\r\n  constructor(\r\n    private mapService: MapService,\r\n    private groupService: GroupService,\r\n    private popupService: PopupService,\r\n    private http: Http,\r\n    private elementText: ElementRef,\r\n    @Optional() private LeafletElement?: LeafletElement,\r\n    @Optional() private LeafletGroup?: LeafletGroup) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.assignCartesianPointToLeafletsLatLngSchema();\r\n    var model = this;\r\n    if (this.LeafletElement || this.LeafletGroup) {\r\n      \r\n      let map = this.mapService.getMap();\r\n\r\n      super.transformPointCoordinates(this.LeafletElement.crs);\r\n\r\n      if (this.iconUrl === \"\") {\r\n        this.marker = L.marker([this.lat, this.lon]);\r\n        this.createMarkerlayer(this.marker, map);\r\n      } else {\r\n        this.imageExists(this.iconUrl, function (exists) {\r\n\r\n          model.getImage().subscribe(\r\n            image => {\r\n              var img = document.createElement(\"img\");\r\n              window.URL.createObjectURL(image.blob());\r\n              var reader = new FileReader();\r\n              reader.onload = function () {\r\n                img.src = reader.result;\r\n                var myIcon = L.icon({\r\n                  iconUrl: model.iconUrl,\r\n                  iconSize: [img.width, img.height],\r\n                  iconAnchor: [img.width / 2, img.height - 1],\r\n                  popupAnchor: [0, -img.height]\r\n                });\r\n\r\n                var obj =  { icon: myIcon, options: null };\r\n                model.marker = L.marker([model.lat, model.lon], obj);             \r\n                model.createMarkerlayer(model.marker, map);\r\n              }\r\n              reader.readAsDataURL(image.blob());\r\n            },\r\n            err => {\r\n              console.log(err);\r\n            });\r\n        });\r\n      }\r\n    } else {\r\n      console.warn(\"This marker-element will not be rendered \\n the expected parent node of marker-element should be either leaf-element or leaflet-group\");\r\n    }\r\n  }\r\n\r\n  createMarkerlayer(marker, map) {\r\n    var textInput = undefined;\r\n    if (this.elementText.nativeElement.childNodes.length > 0) {\r\n      var textNode = this.elementText.nativeElement.childNodes[0];\r\n      textInput = textNode.nodeValue;\r\n    }\r\n\r\n    //add popup methods on element\r\n    this.popupService.enablePopup(this.mouseover, this.onclick, this.marker, textInput);\r\n\r\n    //only if the parent is map should the marker-element should be directly added to the map\r\n    if (this.LeafletGroup) {\r\n      this.groupService.addOLayersToGroup(marker, map, this.mapService, this.LeafletGroup);\r\n    } else {\r\n      marker.addTo(map);\r\n    }\r\n  }\r\n\r\n  imageExists(url, callback) {\r\n    var img = new Image();\r\n    img.onload = function () { callback(true); };\r\n    img.onerror = function () { callback(false); };\r\n    img.src = url;\r\n  }\r\n\r\n  getImage(): any {\r\n    let headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n    let options = new RequestOptions({\r\n      responseType: ResponseContentType.Blob,\r\n      headers: headers\r\n    });\r\n\r\n\r\n    return this.http.get(this.iconUrl, options)\r\n      .map((res: Response) => res)\r\n      .catch((error: any) => Observable.throw('Server error'));\r\n\r\n  }\r\n}\r\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MarkerElement'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PolygonElement.html":{"url":"components/PolygonElement.html","title":"component - PolygonElement","body":"\n                   \n\n\n\n  Components\n  PolygonElement\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    polygon/polygon.ts\n\n\n\n    \n        Extends\n    \n    \n            CoordinateHandler\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n\n\n            \n                selector\n                polygon-element\n            \n\n            \n                styleUrls\n                polygon.css\n            \n\n\n\n            \n                templateUrl\n                polygon.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            latlngs\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in polygon/polygon.ts:23\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            mouseover\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: undefined\n                            \n                        \n                    \n                        \n                            \n                                Defined in polygon/polygon.ts:26\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            onclick\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: undefined\n                            \n                        \n                    \n                        \n                            \n                                Defined in polygon/polygon.ts:27\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Options\n                        \n                        \n                              \n                                Type:    Ipath\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in polygon/polygon.ts:25\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService, groupService: GroupService, popupService: PopupService, guidService: GuidService, helperService: HelperService, elementText: ElementRef, LeafletElement: LeafletElement, LeafletGroup: LeafletGroup)\n                        \n                    \n                        \n                            \n                                Defined in polygon/polygon.ts:30\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in polygon/polygon.ts:44\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ngAfterViewInit\n                        \n                    \n                    \n                        \n    ngAfterViewInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in polygon/polygon.ts:65\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ngDoCheck\n                        \n                    \n                    \n                        \n    ngDoCheck()\n                        \n                    \n    \n                        \n                            \n                                Defined in polygon/polygon.ts:76\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                             globalId\n                        \n                    \n                    \n                        \n                            globalId:     string\n    \n                        \n                    \n                        \n                            \n                                Defined in polygon/polygon.ts:30\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             originalObject\n                        \n                    \n                    \n                        \n                            originalObject:     any\n    \n                        \n                    \n                        \n                            \n                                Defined in polygon/polygon.ts:29\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             polygon\n                        \n                    \n                    \n                        \n                            polygon:     any\n    \n                        \n                    \n                        \n                            \n                                Defined in polygon/polygon.ts:28\n                            \n                        \n                \n            \n    \n\n\n\n    \n        import { Component, Input, Injector, Optional, ElementRef } from '@angular/core';\r\nimport { LeafletElement } from '../map/map';\r\nimport { LeafletGroup } from '../group/group';\r\nimport { MapService } from '../services/map.service';\r\nimport { GroupService } from '../services/group.service';\r\nimport { PopupService } from '../services/popup.service';\r\nimport { GuidService } from '../services/globalId.service';\r\nimport { HelperService } from '../services/helper.service';\r\nimport { CoordinateHandler } from '../helpers/coodinateHandler';\r\nimport { path } from '../models/path';\r\nimport { Ipath } from '../interfaces/path';\r\nimport * as L from 'leaflet';\r\n\r\n\r\n@Component({\r\n  moduleId: module.id.toString(),\r\n  selector: 'polygon-element',\r\n  templateUrl: 'polygon.html',\r\n  styleUrls: ['polygon.css']\r\n})\r\n\r\nexport class PolygonElement extends CoordinateHandler {\r\n  @Input() latlngs: any = [[[52.65, -1.2], [52.645, -1.15], [52.696, -1.155], [52.697, -1.189]],\r\n  [[52.66, -1.19], [52.665, -1.16], [52.686, -1.161], [52.687, -1.179]]];\r\n  @Input() Options: Ipath = new path(null);\r\n  @Input() mouseover: string = undefined;\r\n  @Input() onclick: string = undefined;\r\n  polygon: any = null;\r\n  originalObject: any = [...this.latlngs];\r\n  globalId: string = this.guidService.newGuid();\r\n\r\n  constructor(\r\n    private mapService: MapService,\r\n    private groupService: GroupService,\r\n    private popupService: PopupService,\r\n    private guidService: GuidService,\r\n    private helperService: HelperService,\r\n    private elementText: ElementRef,\r\n    @Optional() private LeafletElement?: LeafletElement,\r\n    @Optional() private LeafletGroup?: LeafletGroup) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.assignCartesianArrayToLeafletsLatLngSchema();\r\n    //check if any of the two optional injections exist\r\n    if (this.LeafletElement || this.LeafletGroup) {\r\n      let inheritedOptions: any = new path(this.Options);\r\n      let map = this.mapService.getMap();\r\n\r\n      super.transformArrayCoordinates(this.LeafletElement.crs);\r\n\r\n      this.polygon = L.polygon([this.latlngs], inheritedOptions);\r\n\r\n      if (this.LeafletGroup) {\r\n        this.groupService.addOLayersToGroup(this.polygon, map, this.mapService, this.LeafletGroup, false, this.globalId);\r\n      } else {\r\n        this.polygon.addTo(map);\r\n      }\r\n    } else {\r\n      console.warn(\"This polygon-element will not be rendered \\n the expected parent node of polygon-element should be either leaf-element or leaflet-group\");\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    var textInput = undefined;\r\n    if (this.elementText.nativeElement.childNodes.length > 0) {\r\n      var textNode = this.elementText.nativeElement.childNodes[0];\r\n      textInput = textNode.nodeValue;\r\n    }\r\n\r\n    //add popup methods on element\r\n    this.popupService.enablePopup(this.mouseover, this.onclick, this.polygon, textInput);\r\n  }\r\n\r\n  ngDoCheck() {\r\n    let map = this.mapService.getMap();\r\n\r\n    var same: Boolean = this.helperService.arrayCompare(this.originalObject, this.latlngs);\r\n\r\n    if (!same) {\r\n      this.originalObject = [...this.latlngs];\r\n      //if the layer is part of a group\r\n      let inheritedOptions: any = new path(this.Options);\r\n\r\n      if (this.LeafletGroup) {\r\n        this.polygon = L.polygon([this.latlngs], inheritedOptions);\r\n        this.groupService.addOLayersToGroup(this.polygon, map, this.mapService, this.LeafletGroup, true, this.globalId);\r\n      } else {\r\n        map.removeLayer(this.polygon);\r\n        this.polygon = L.polygon([this.latlngs], inheritedOptions);\r\n        this.polygon.addTo(map);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PolygonElement'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PolylineElement.html":{"url":"components/PolylineElement.html","title":"component - PolylineElement","body":"\n                   \n\n\n\n  Components\n  PolylineElement\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    polyline/polyline.ts\n\n\n\n    \n        Extends\n    \n    \n            CoordinateHandler\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n\n\n            \n                selector\n                polyline-element\n            \n\n            \n                styleUrls\n                polyline.css\n            \n\n\n\n            \n                templateUrl\n                polyline.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            latlngs\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in polyline/polyline.ts:22\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            mouseover\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: undefined\n                            \n                        \n                    \n                        \n                            \n                                Defined in polyline/polyline.ts:24\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            onclick\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: undefined\n                            \n                        \n                    \n                        \n                            \n                                Defined in polyline/polyline.ts:25\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Options\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in polyline/polyline.ts:23\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService, groupService: GroupService, popupService: PopupService, guidService: GuidService, helperService: HelperService, elementText: ElementRef, LeafletElement: LeafletElement, LeafletGroup: LeafletGroup)\n                        \n                    \n                        \n                            \n                                Defined in polyline/polyline.ts:28\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in polyline/polyline.ts:42\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ngAfterViewInit\n                        \n                    \n                    \n                        \n    ngAfterViewInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in polyline/polyline.ts:65\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ngDoCheck\n                        \n                    \n                    \n                        \n    ngDoCheck()\n                        \n                    \n    \n                        \n                            \n                                Defined in polyline/polyline.ts:76\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                             globalId\n                        \n                    \n                    \n                        \n                            globalId:     string\n    \n                        \n                    \n                        \n                            \n                                Defined in polyline/polyline.ts:28\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             Î\n                        \n                    \n                    \n                        \n                            Î:     any\n    \n                        \n                    \n                        \n                            \n                                Defined in polyline/polyline.ts:25\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             originalObject\n                        \n                    \n                    \n                        \n                            originalObject:     any\n    \n                        \n                    \n                        \n                            \n                                Defined in polyline/polyline.ts:27\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             polyline\n                        \n                    \n                    \n                        \n                            polyline:     any\n    \n                        \n                    \n                        \n                            \n                                Defined in polyline/polyline.ts:26\n                            \n                        \n                \n            \n    \n\n\n\n    \n        import { Component, Input, Injector, Optional, ElementRef } from '@angular/core';\r\nimport { LeafletElement } from '../map/map';\r\nimport { LeafletGroup } from '../group/group';\r\nimport { MapService } from '../services/map.service';\r\nimport { GroupService } from '../services/group.service';\r\nimport { PopupService } from '../services/popup.service';\r\nimport { GuidService } from '../services/globalId.service';\r\nimport { HelperService } from '../services/helper.service';\r\nimport { CoordinateHandler } from '../helpers/coodinateHandler';\r\nimport { path } from '../models/path';\r\nimport { Ipath } from '../interfaces/path';\r\nimport * as L from 'leaflet';\r\n\r\n@Component({\r\n  moduleId: module.id.toString(),\r\n  selector: 'polyline-element',\r\n  templateUrl: 'polyline.html',\r\n  styleUrls: ['polyline.css']\r\n})\r\n\r\nexport class PolylineElement extends CoordinateHandler {\r\n  @Input() latlngs: any = [[52.6, -1.1], [52.605, -1.1], [52.606, -1.105], [52.697, -1.109]];\r\n  @Input() Options: any = new path(null);\r\n  @Input() mouseover: string = undefined;\r\n  @Input() onclick: string = undefined; Î\r\n  polyline: any = null;\r\n  originalObject: any = [...this.latlngs];\r\n  globalId: string = this.guidService.newGuid();\r\n\r\n  constructor(\r\n    private mapService: MapService,\r\n    private groupService: GroupService,\r\n    private popupService: PopupService,\r\n    private guidService: GuidService,\r\n    private helperService: HelperService,\r\n    private elementText: ElementRef,\r\n    @Optional() private LeafletElement?: LeafletElement,\r\n    @Optional() private LeafletGroup?: LeafletGroup) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.assignCartesianArrayToLeafletsLatLngSchema();\r\n    //check if any of the two optional injections exist\r\n    if (this.LeafletElement || this.LeafletGroup) {\r\n      //polyline shouldn't have a fill\r\n      this.Options.fill = false;\r\n      let inheritedOptions: any = new path(this.Options);\r\n      let map = this.mapService.getMap();\r\n\r\n      super.transformArrayCoordinates(this.LeafletElement.crs);\r\n\r\n      this.polyline = L.polyline(this.latlngs, inheritedOptions);\r\n\r\n      if (this.LeafletGroup) {\r\n        this.groupService.addOLayersToGroup(this.polyline, map, this.mapService, this.LeafletGroup, false, this.globalId);\r\n      } else {\r\n        this.polyline.addTo(map);\r\n      }\r\n    } else {\r\n      console.warn(\"This polyline-element will not be rendered \\n the expected parent node of polyline-element should be either leaf-element or leaflet-group\");\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    var textInput = undefined;\r\n    if (this.elementText.nativeElement.childNodes.length > 0) {\r\n      var textNode = this.elementText.nativeElement.childNodes[0];\r\n      textInput = textNode.nodeValue;\r\n    }\r\n\r\n    //add popup methods on element\r\n    this.popupService.enablePopup(this.mouseover, this.onclick, this.polyline, textInput);\r\n  }\r\n\r\n  ngDoCheck() {\r\n    let map = this.mapService.getMap();\r\n\r\n    var same: Boolean = this.helperService.arrayCompare(this.originalObject, this.latlngs);\r\n\r\n    if (!same) {\r\n      this.originalObject = [...this.latlngs];\r\n      //if the layer is part of a group\r\n      this.Options.fill = false;\r\n      let inheritedOptions: any = new path(this.Options);\r\n\r\n      if (this.LeafletGroup) {\r\n        this.polyline = L.polyline(this.latlngs, inheritedOptions);\r\n        this.groupService.addOLayersToGroup(this.polyline, map, this.mapService, this.LeafletGroup, true, this.globalId);\r\n      } else {\r\n        map.removeLayer(this.polyline);\r\n        this.polyline = L.polyline(this.latlngs, inheritedOptions);\r\n        this.polyline.addTo(map);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PolylineElement'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopupElement.html":{"url":"components/PopupElement.html","title":"component - PopupElement","body":"\n                   \n\n\n\n  Components\n  PopupElement\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    popup/popup.ts\n\n\n\n    \n        Extends\n    \n    \n            CoordinateHandler\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n\n\n            \n                selector\n                popup-element\n            \n\n            \n                styleUrls\n                popup.css\n            \n\n\n\n            \n                templateUrl\n                popup.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            content\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                            \n                              Default value: nice popup\n                            \n                        \n                    \n                        \n                            \n                                Defined in popup/popup.ts:20\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            lat\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: 52.6\n                            \n                        \n                    \n                        \n                            \n                                Defined in popup/popup.ts:18\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            lon\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in popup/popup.ts:19\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService, groupService: GroupService, LeafletElement: LeafletElement, LeafletGroup: LeafletGroup)\n                        \n                    \n                        \n                            \n                                Defined in popup/popup.ts:20\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in popup/popup.ts:30\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n    \n        import { Component, Input, Injector, Optional } from '@angular/core';\r\nimport { LeafletElement } from '../map/map';\r\nimport { LeafletGroup } from '../group/group';\r\nimport { MapService } from '../services/map.service';\r\nimport { GroupService } from '../services/group.service';\r\nimport { CoordinateHandler } from '../helpers/coodinateHandler';\r\nimport * as L from 'leaflet';\r\n\r\n\r\n@Component({\r\n  moduleId: module.id.toString(),\r\n  selector: 'popup-element',\r\n  templateUrl: 'popup.html',\r\n  styleUrls: ['popup.css']\r\n})\r\n\r\nexport class PopupElement extends CoordinateHandler {\r\n  @Input() lat: number = 52.6;\r\n  @Input() lon: number = -1.9;\r\n  @Input() content: string = \"nice popup\";\r\n\r\n  constructor(\r\n    private mapService: MapService,\r\n    private groupService: GroupService,\r\n    @Optional() private LeafletElement?: LeafletElement,\r\n    @Optional() private LeafletGroup?: LeafletGroup) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.assignCartesianPointToLeafletsLatLngSchema();\r\n    //check if any of the two optional injections exist\r\n    if (this.LeafletElement || this.LeafletGroup) {\r\n\r\n      let map = this.mapService.getMap();\r\n\r\n      super.transformPointCoordinates(this.LeafletElement.crs);\r\n\r\n      let popup = L.popup({ autoClose: false, keepInView: true }).setLatLng([this.lat, this.lon]).setContent(this.content);\r\n\r\n      if (this.LeafletGroup) {\r\n        this.groupService.addOLayersToGroup(popup, map, this.mapService, this.LeafletGroup);\r\n      } else {\r\n        popup.addTo(map);\r\n      }\r\n    } else {\r\n      console.warn(\"This popup-element will not be rendered \\n the expected parent node of popup-element should be either leaf-element or leaflet-group\");\r\n    }\r\n  }\r\n}\r\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PopupElement'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScaleControl.html":{"url":"components/ScaleControl.html","title":"component - ScaleControl","body":"\n                   \n\n\n\n  Components\n  ScaleControl\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    map/scale/scale.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n\n\n            \n                selector\n                scale-control\n            \n\n            \n                styleUrls\n                scale.css\n            \n\n\n\n            \n                templateUrl\n                scale.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            Options\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in map/scale/scale.ts:15\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService, LeafletElement: LeafletElement)\n                        \n                    \n                        \n                            \n                                Defined in map/scale/scale.ts:15\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in map/scale/scale.ts:21\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n    \n        import { Component, Input, Injector, Optional } from '@angular/core';\r\nimport { LeafletElement } from '../map';\r\nimport { MapService } from '../services/map.service';\r\nimport { scaleModel } from '../models/scaleModel';\r\nimport * as L from 'leaflet';\r\n\r\n\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    selector: 'scale-control',\r\n    templateUrl: 'scale.html',\r\n    styleUrls: ['scale.css']\r\n})\r\nexport class ScaleControl {\r\n    @Input() Options: any = new scaleModel(null);\r\n    constructor(\r\n        private mapService: MapService,\r\n        @Optional() private LeafletElement?: LeafletElement) {        \r\n    }\r\n\r\n    ngOnInit() { \r\n        if (this.LeafletElement) {\r\n            let map = this.mapService.getMap();          \r\n            L.control.scale(this.Options).addTo(map);\r\n        } else {\r\n            console.warn(\"This scale-control will not be rendered \\n the expected parent node of scale-control should be leaf-element\");\r\n        }\r\n    }\r\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScaleControl'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WatermarkComponent.html":{"url":"components/WatermarkComponent.html","title":"component - WatermarkComponent","body":"\n                   \n\n\n\n  Components\n  WatermarkComponent\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    map/watermark/watermark.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                watermark-element\n            \n\n            \n                styleUrls\n                watermark.css\n            \n\n\n\n            \n                templateUrl\n                watermark.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            watermarkUrl\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in map/watermark/watermark.ts:12\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n                        \n                            \n                                Defined in map/watermark/watermark.ts:12\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in map/watermark/watermark.ts:16\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\r\nimport * as L from 'leaflet';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'watermark-element',\r\n    templateUrl: 'watermark.html',\r\n    styleUrls: ['watermark.css']\r\n})\r\n\r\nexport class WatermarkComponent {\r\n    @Input() watermarkUrl: string;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        var self = this;\r\n        if (this.watermarkUrl) {\r\n            L.Control['Watermark'] = {};\r\n\r\n            L.Control['Watermark'] = L.Control.extend({\r\n                onAdd: function (map) {\r\n                    var img: any = L.DomUtil.create('img');\r\n\r\n                    img.src = self.watermarkUrl;\r\n                    img.style.width = '200px';\r\n\r\n                    return img;\r\n                },\r\n\r\n                onRemove: function (map) {\r\n                }\r\n            });\r\n\r\n            L.control['watermark'] = function (opts) {\r\n                return new L.Control['Watermark'](opts);\r\n            }\r\n        }\r\n    }\r\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WatermarkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ZoomControl.html":{"url":"components/ZoomControl.html","title":"component - ZoomControl","body":"\n                   \n\n\n\n  Components\n  ZoomControl\n\n\n\n    \n        Infos\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    map/zoom/zoom.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id.toString()\n            \n\n\n\n\n            \n                selector\n                zoom-control\n            \n\n            \n                styleUrls\n                zoom.css\n            \n\n\n\n            \n                templateUrl\n                zoom.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            Options\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                        \n                            \n                                Defined in map/zoom/zoom.ts:15\n                            \n                        \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(mapService: MapService, LeafletElement: LeafletElement)\n                        \n                    \n                        \n                            \n                                Defined in map/zoom/zoom.ts:15\n                            \n                        \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n                        \n                            \n                                Defined in map/zoom/zoom.ts:21\n                            \n                        \n    \n                    \n                        \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n    \n        import { Component, Input, Injector, Optional } from '@angular/core';\r\nimport { LeafletElement } from '../map';\r\nimport { MapService } from '../services/map.service';\r\nimport { zoomModel } from '../models/zoomModel';\r\nimport * as L from 'leaflet';\r\n\r\n\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    selector: 'zoom-control',\r\n    templateUrl: 'zoom.html',\r\n    styleUrls: ['zoom.css']\r\n})\r\nexport class ZoomControl {\r\n    @Input() Options: any = new zoomModel(null);\r\n    constructor(\r\n        private mapService: MapService,\r\n        @Optional() private LeafletElement?: LeafletElement) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.LeafletElement) {\r\n            let map = this.mapService.getMap();\r\n            L.control.zoom(this.Options).addTo(map);\r\n        } else {\r\n            console.warn(\"This zoom-control will not be rendered \\n the expected parent node of zoom-control should be leaf-element\");\r\n        }\r\n    }\r\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AttributionControl', 'selector': 'attribution-control'},{'name': 'CircleElement', 'selector': 'circle-element'},{'name': 'CircleMarkerElement', 'selector': 'circle-marker-element'},{'name': 'GeoJsonElement', 'selector': 'geojson-element'},{'name': 'ImageOverlayElement', 'selector': 'image-overlay-element'},{'name': 'LayerElement', 'selector': 'layer-element'},{'name': 'LeafletElement', 'selector': 'leaf-element'},{'name': 'LeafletGroup', 'selector': 'leaflet-group'},{'name': 'MarkerElement', 'selector': 'marker-element'},{'name': 'PolygonElement', 'selector': 'polygon-element'},{'name': 'PolylineElement', 'selector': 'polyline-element'},{'name': 'PopupElement', 'selector': 'popup-element'},{'name': 'ScaleControl', 'selector': 'scale-control'},{'name': 'WatermarkComponent', 'selector': 'watermark-element'},{'name': 'ZoomControl', 'selector': 'zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ZoomControl'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            services/group.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(guidService: GuidService)\n                                \n                            \n                                \n                                    \n                                        Defined in services/group.service.ts:12\n                                    \n                                \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public addOLayersToGroup\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    addOLayersToGroup(overlay: any, map: any, mapService: any, group: any, replace: boolean, gId: String)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/group.service.ts:16\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getObservableGroup\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getObservableGroup()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/group.service.ts:47\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getGroup\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getGroup()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/group.service.ts:55\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getLayerGroup\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getLayerGroup()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/group.service.ts:59\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getLayerNumber\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getLayerNumber()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/group.service.ts:63\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private group\n                                \n                            \n                            \n                                \n                                    group:     any\n            \n                                \n                            \n                                \n                                    \n                                        Defined in services/group.service.ts:12\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private layerGroup\n                                \n                            \n                            \n                                \n                                    layerGroup:     any[]\n            \n                                \n                            \n                                \n                                    \n                                        Defined in services/group.service.ts:9\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private layerGroupNumber\n                                \n                            \n                            \n                                \n                                    layerGroupNumber:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 0\n                                    \n                                \n                                \n                                    \n                                        Defined in services/group.service.ts:11\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private layerId\n                                \n                            \n                            \n                                \n                                    layerId:     any[]\n            \n                                \n                            \n                                \n                                    \n                                        Defined in services/group.service.ts:10\n                                    \n                                \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { GuidService } from '../services/globalId.service';\r\nimport * as L from 'leaflet';\r\n\r\n\r\n@Injectable()\r\nexport class GroupService {\r\n    private layerGroup: Array = [];\r\n    private layerId: Array = [];\r\n    private layerGroupNumber: number = 0;\r\n    private group: any = {};\r\n\r\n    constructor(private guidService: GuidService) { }\r\n\r\n    public addOLayersToGroup(overlay, map, mapService, group, replace = false, gId?: String) {\r\n        if (!gId) {\r\n            gId = this.guidService.newGuid();\r\n        }\r\n        if (this.layerId.indexOf(gId) === -1) {\r\n            this.layerId.push(gId);\r\n        }\r\n        if (Object.keys(this.group).length !== 0) {\r\n            if (replace) {\r\n                map.removeLayer(this.group);\r\n                if (this.layerId.indexOf(gId) !== -1) {\r\n                    this.layerGroup[this.layerId.indexOf(gId)] = overlay;\r\n                } else {\r\n                    this.layerGroup.push(overlay);\r\n                }\r\n                this.group = L.layerGroup(this.getLayerGroup());\r\n                this.group.addTo(map);\r\n            } else {\r\n                this.layerGroup.push(overlay);\r\n                this.group.addLayer(overlay);\r\n            }\r\n        }\r\n        if (!replace) {\r\n            this.layerGroup.push(overlay);\r\n            this.group = L.layerGroup(this.getLayerGroup());\r\n            this.group.addTo(map);\r\n        }\r\n\r\n        mapService.addOverlay(this.getGroup(), group.name, group.globalId);\r\n    }\r\n\r\n    public getObservableGroup() {\r\n        return Observable.create(observer => {\r\n            var group = this.getGroup();\r\n            observer.next(group);\r\n            observer.complete();\r\n        });\r\n    }\r\n\r\n    public getGroup() {\r\n        return this.group;\r\n    }\r\n\r\n    public getLayerGroup() {\r\n        return this.layerGroup;\r\n    }\r\n\r\n    public getLayerNumber() {\r\n        return this.layerGroupNumber;\r\n    }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GuidService.html":{"url":"injectables/GuidService.html","title":"injectable - GuidService","body":"\n                   \n\n\n\n\n\n  Injectables\n  GuidService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            services/globalId.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                \n                                    \n                                        Defined in services/globalId.service.ts:5\n                                    \n                                \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     newGuid\n                                \n                            \n                            \n                                \n            newGuid()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/globalId.service.ts:9\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class GuidService {\r\n\r\n    constructor() { }\r\n\r\n     newGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelperService.html":{"url":"injectables/HelperService.html","title":"injectable - HelperService","body":"\n                   \n\n\n\n\n\n  Injectables\n  HelperService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            services/helper.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                \n                                    \n                                        Defined in services/helper.service.ts:5\n                                    \n                                \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     arrayCompare\n                                \n                            \n                            \n                                \n            arrayCompare(a: any, b: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/helper.service.ts:9\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class HelperService {\r\n\r\n    constructor() { }\r\n\r\n    arrayCompare(a, b) {\r\n        if (a.length != b.length) {\r\n            return false;\r\n        }\r\n        for (var i in a) {\r\n            // Don't forget to check for arrays in our arrays.\r\n            if (a[i] instanceof Array && b[i] instanceof Array) {\r\n                if (!this.arrayCompare(a[i], b[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (a[i] != b[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            services/map.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                \n                                    \n                                        Defined in services/map.service.ts:15\n                                    \n                                \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public setMap\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    setMap(map: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:19\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getMap\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getMap()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:22\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public setLayerControl\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    setLayerControl(state: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:26\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getLayerControl\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getLayerControl()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:29\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public addBasemap\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    addBasemap(basemap: any, name: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:33\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getUniqueName\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getUniqueName(name: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:45\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public addOverlay\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    addOverlay(overlay: any, name: string, gId: string)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:58\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getBasemaps\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getBasemaps()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:85\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getOverlays\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getOverlays()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:89\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getObservableOverlays\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getObservableOverlays()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:93\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getObservableBasemaps\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getObservableBasemaps()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:100\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public refreshOverlays\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    refreshOverlays(remove: any, add: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:107\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public increaseNumber\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    increaseNumber()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:120\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getLayerNumber\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getLayerNumber()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:124\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public addControl\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    addControl()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/map.service.ts:128\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private basemaps\n                                \n                            \n                            \n                                \n                                    basemaps:     any\n            \n                                \n                            \n                                \n                                    \n                                        Defined in services/map.service.ts:9\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private groupIdentifiers\n                                \n                            \n                            \n                                \n                                    groupIdentifiers:     string[]\n            \n                                \n                            \n                                \n                                    \n                                        Defined in services/map.service.ts:14\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private groupNames\n                                \n                            \n                            \n                                \n                                    groupNames:     string[]\n            \n                                \n                            \n                                \n                                    \n                                        Defined in services/map.service.ts:15\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private layerControlflag\n                                \n                            \n                            \n                                \n                                    layerControlflag:     Boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: false\n                                    \n                                \n                                \n                                    \n                                        Defined in services/map.service.ts:11\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private layerControlObject\n                                \n                            \n                            \n                                \n                                    layerControlObject:     any\n            \n                                \n                            \n                                \n                                    \n                                        Defined in services/map.service.ts:13\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private layersInControlNumber\n                                \n                            \n                            \n                                \n                                    layersInControlNumber:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 0\n                                    \n                                \n                                \n                                    \n                                        Defined in services/map.service.ts:12\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private map\n                                \n                            \n                            \n                                \n                                    map:     any\n            \n                                \n                            \n                                \n                                    \n                                        Defined in services/map.service.ts:8\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private overlays\n                                \n                            \n                            \n                                \n                                    overlays:     any\n            \n                                \n                            \n                                \n                                    \n                                        Defined in services/map.service.ts:10\n                                    \n                                \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport * as L from 'leaflet';\r\n\r\n\r\n@Injectable()\r\nexport class MapService {\r\n    private map;\r\n    private basemaps: any = {};\r\n    private overlays: any = {};\r\n    private layerControlflag: Boolean = false;\r\n    private layersInControlNumber: number = 0;\r\n    private layerControlObject: any = {};\r\n    private groupIdentifiers: Array = [];\r\n    private groupNames: Array = [];\r\n\r\n    constructor() { }\r\n\r\n    public setMap(map) {\r\n        this.map = map;\r\n    }\r\n    public getMap() {\r\n        return this.map;\r\n    }\r\n\r\n    public setLayerControl(state) {\r\n        this.layerControlflag = state;\r\n    }\r\n    public getLayerControl() {\r\n        return this.layerControlflag;\r\n    }\r\n\r\n    public addBasemap(basemap, name) {\r\n        if (name === '') {\r\n            name = 'unknown layer';\r\n        }\r\n        if (this.basemaps[name] === undefined) {\r\n            this.basemaps[name] = basemap;\r\n        } else {\r\n            name = this.getUniqueName(name);\r\n            this.addBasemap(basemap, name)\r\n        }\r\n    }\r\n\r\n    public getUniqueName(name) {\r\n        let nameindex: number = 0;\r\n        let newName: string = name;\r\n        if (name.indexOf('(') !== -1) {\r\n            nameindex = parseInt(name.split('(')[1].split(')')[0]);\r\n            nameindex += 1;\r\n            newName = name.split('(')[0];\r\n        } else {\r\n            nameindex = 1;\r\n        }\r\n        return name = newName + '(' + nameindex + ')';\r\n    }\r\n\r\n    public addOverlay(overlay, name: string, gId?: string) {\r\n        if (this.groupIdentifiers.indexOf(gId) !== -1) {\r\n            let index = this.groupIdentifiers.indexOf(gId);\r\n            let existing_name: string = this.groupNames[index];\r\n            this.overlays[existing_name] = overlay;\r\n        } else {\r\n            if (name === '') {\r\n                name = 'unknown group';\r\n            }\r\n            if (this.overlays[name] === undefined) {\r\n                this.groupNames.push(name);\r\n                this.groupIdentifiers.push(gId);\r\n                this.overlays[name] = overlay;\r\n            } else {\r\n                name = this.getUniqueName(name);\r\n                if (this.groupNames.indexOf(name) === -1) {\r\n                    this.groupNames.push(name);\r\n                    this.groupIdentifiers.push(gId);\r\n                } else {\r\n                    this.addOverlay(overlay, name);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.addControl();\r\n    }\r\n\r\n    public getBasemaps() {\r\n        return this.basemaps;\r\n    }\r\n\r\n    public getOverlays() {\r\n        return this.overlays;\r\n    }\r\n\r\n    public getObservableOverlays() {\r\n        return Observable.create(observer => {\r\n            observer.next(this.overlays);\r\n            observer.complete();\r\n        });\r\n    }\r\n\r\n    public getObservableBasemaps() {\r\n        return Observable.create(observer => {\r\n            observer.next(this.basemaps);\r\n            observer.complete();\r\n        });\r\n    }\r\n\r\n    public refreshOverlays(remove, add) {\r\n        let overlays = this.getOverlays();\r\n        for (var key in overlays) {\r\n            if (overlays[key] instanceof Array) {\r\n                overlays[key].forEach((element, index, arr) => {\r\n                    if (element._leaflet_id == remove._leaflet_id) {\r\n                        arr[index] = add;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    public increaseNumber() {\r\n        this.layersInControlNumber += 1;\r\n    }\r\n\r\n    public getLayerNumber() {\r\n        return this.layersInControlNumber;\r\n    }\r\n\r\n    public addControl() {\r\n        if (this.layerControlflag) {\r\n            let map = this.getMap();\r\n            if (Object.keys(this.layerControlObject).length !== 0) {\r\n                this.layerControlObject.getContainer().innerHTML = '';\r\n                map.removeControl(this.layerControlObject);\r\n            }\r\n            this.layerControlObject = L.control.layers(this.getBasemaps(), this.getOverlays()).addTo(map);\r\n        }\r\n    }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopupService.html":{"url":"injectables/PopupService.html","title":"injectable - PopupService","body":"\n                   \n\n\n\n\n\n  Injectables\n  PopupService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            services/popup.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                \n                                    \n                                        Defined in services/popup.service.ts:5\n                                    \n                                \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public enablePopup\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    enablePopup(mouseover: any, onclick: any, element: any, text: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in services/popup.service.ts:9\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class PopupService {\r\n\r\n    constructor() { }\r\n\r\n    public enablePopup(mouseover, onclick, element, text) {\r\n        if (mouseover && onclick) {\r\n            mouseover = undefined;\r\n            console.warn('you can not use mouseover and onclick at the same time, mouseover is going to be depressed');\r\n        }\r\n        if (mouseover) {\r\n            if (mouseover === 'true' && text) {\r\n                mouseover = text;\r\n            } else if (mouseover === true && !text) {\r\n                mouseover = \"true\";\r\n            }\r\n            element.bindPopup(mouseover);\r\n            element.on('mouseover', function () {\r\n                this.openPopup();\r\n            }).on('mouseout', function () {\r\n                this.closePopup();\r\n            });\r\n        }\r\n        if (onclick) {\r\n            if (onclick === 'true' && text) {\r\n                onclick = text;\r\n            } else if (onclick === true && !text) {\r\n                onclick = \"true\";\r\n            }\r\n            element.bindPopup(onclick);\r\n            element.on('click', function () {\r\n                this.openPopup();\r\n            })\r\n        }\r\n        if (!mouseover && !onclick && text) {\r\n            element.bindPopup(text);\r\n            element.on('mouseover', function () {\r\n                this.openPopup();\r\n            }).on('mouseout', function () {\r\n                this.closePopup();\r\n            });\r\n        }\r\n    }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoordinateHandler.html":{"url":"classes/CoordinateHandler.html","title":"class - CoordinateHandler","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  CoordinateHandler\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            helpers/coodinateHandler.ts\n        \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                \n                                    \n                                        Defined in helpers/coodinateHandler.ts:9\n                                    \n                                \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     assignCartesianPointToLeafletsLatLngSchema\n                                \n                            \n                            \n                                \n            assignCartesianPointToLeafletsLatLngSchema()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in helpers/coodinateHandler.ts:14\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     assignCartesianArrayToLeafletsLatLngSchema\n                                \n                            \n                            \n                                \n            assignCartesianArrayToLeafletsLatLngSchema(arr: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in helpers/coodinateHandler.ts:24\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     transformPointCoordinates\n                                \n                            \n                            \n                                \n            transformPointCoordinates(crs: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in helpers/coodinateHandler.ts:41\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setNewLatLng\n                                \n                            \n                            \n                                \n            setNewLatLng(newlatlng: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in helpers/coodinateHandler.ts:58\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     transformArrayCoordinates\n                                \n                            \n                            \n                                \n            transformArrayCoordinates(crs: any, arr: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in helpers/coodinateHandler.ts:63\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Input } from '@angular/core';\r\n\r\nexport class CoordinateHandler {\r\n    @Input() lat: number;\r\n    @Input() lon: number;\r\n    @Input() x: number;\r\n    @Input() y: number;\r\n    @Input() latlngs: any;\r\n    @Input() xys: number;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    assignCartesianPointToLeafletsLatLngSchema() {\r\n        if (this.x !== undefined) {\r\n            this.lon = this.x;\r\n        }\r\n\r\n        if (this.y !== undefined) {\r\n            this.lat = this.y;\r\n        }\r\n    }\r\n\r\n    assignCartesianArrayToLeafletsLatLngSchema(arr?) {\r\n        if (this.xys !== undefined) {\r\n            if (!arr) {\r\n                arr = this.xys;\r\n            }\r\n\r\n            for (var i = 0; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoJSONCoordinateHandler.html":{"url":"classes/GeoJSONCoordinateHandler.html","title":"class - GeoJSONCoordinateHandler","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  GeoJSONCoordinateHandler\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            helpers/geoJsonReader.ts\n        \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                \n                                    \n                                        Defined in helpers/geoJsonReader.ts:4\n                                    \n                                \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     transformJSONCoordinates\n                                \n                            \n                            \n                                \n            transformJSONCoordinates(geoJSON: any, crs: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in helpers/geoJsonReader.ts:9\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     transformPointCoordinates\n                                \n                            \n                            \n                                \n            transformPointCoordinates(point: any, crs: any)\n                                \n                            \n            \n                                \n                                    \n                                        Defined in helpers/geoJsonReader.ts:76\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Input } from '@angular/core';\r\n\r\nexport class GeoJSONCoordinateHandler {\r\n    @Input() geojson: any = {};\r\n\r\n    constructor() {\r\n    }\r\n\r\n    transformJSONCoordinates(geoJSON: any, crs: any) {\r\n        /**\r\n         * 7.  GeoJSON Types Are Not Extensible\r\n         * Implementations MUST NOT extend the fixed set of GeoJSON types:\r\n         * FeatureCollection, Feature, Point, LineString, MultiPoint, Polygon,\r\n         * MultiLineString, MultiPolygon, and GeometryCollection.\r\n         */\r\n        if (geoJSON.type === \"FeatureCollection\") {\r\n            var featureCollection = geoJSON as GeoJSONFeatureCollection;\r\n            featureCollection.features.forEach(feature => {\r\n                this.transformJSONCoordinates(feature, crs);\r\n            });\r\n        }\r\n        if (geoJSON.type === \"Feature\") {\r\n            var feature = geoJSON as GeoJSONFeature;\r\n            this.transformJSONCoordinates(feature.geometry, crs);\r\n        }\r\n        if (geoJSON.type === \"Point\") {\r\n            var point = geoJSON as GeoJSONPoint;\r\n            point = this.transformPointCoordinates(point.coordinates, crs);\r\n        }\r\n        if (geoJSON.type === \"LineString\") {\r\n            var lineString = geoJSON as GeoJSONLineString;\r\n            lineString.coordinates.forEach(point => {\r\n                this.transformPointCoordinates(point, crs);\r\n            });\r\n        }\r\n        if (geoJSON.type === \"MultiPoint\") {\r\n            var multiPoint = geoJSON as GeoJSONMultiPoint;\r\n            multiPoint.coordinates.forEach(point => {\r\n                this.transformPointCoordinates(point, crs);\r\n            });\r\n        }\r\n        if (geoJSON.type === \"Polygon\") {\r\n            var polygon = geoJSON as GeoJSONPolygon;\r\n            polygon.coordinates.forEach(polygonElement => {\r\n                polygonElement.forEach(point => {\r\n                    this.transformPointCoordinates(point, crs);\r\n                });\r\n            });\r\n        }\r\n        if (geoJSON.type === \"MultiLineString\") {\r\n            var multiLineString = geoJSON as GeoJSONMultiLineString;\r\n            multiLineString.coordinates.forEach(lineString => {\r\n                lineString.forEach(point => {\r\n                    this.transformPointCoordinates(point, crs);\r\n                });\r\n            });\r\n        }\r\n        if (geoJSON.type === \"MultiPolygon\") {\r\n            var multiPolygon = geoJSON as GeoJSONMultiPolygon;\r\n            multiPolygon.coordinates.forEach(polygon => {\r\n                polygon.forEach(polygonElement => {\r\n                    polygonElement.forEach(point => {\r\n                        this.transformPointCoordinates(point, crs);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        if (geoJSON.type === \"GeometryCollection\") {\r\n            var geometryCollection = geoJSON as GeoJSONGeometryCollection;\r\n            geometryCollection.geometries.forEach(geometry => {\r\n                this.transformJSONCoordinates(geometry, crs);\r\n            });\r\n        }\r\n    }\r\n\r\n    transformPointCoordinates(point, crs) {\r\n        /**\r\n         * this is because leaflet default CRS is 3857 (so it can render wms properly)\r\n         * but uses 4326 everywhere else so if CRS is 3857 don't reproject coordinates\r\n         * also proj4 by default unprojects (inverse) to wgs84 (4326) which is handy but\r\n         * doesnt match leaflet's default projection. Generally I don't really agree on\r\n         * how leaflet doesn't handle projections on a global state\r\n         */\r\n        if (crs.code && crs.code !== \"EPSG:3857\") {\r\n            let newlatlng = crs.unproject({ x: point[0], y: point[1] });\r\n            point[1] = newlatlng.lat;\r\n            point[0] = newlatlng.lng;\r\n            return point;\r\n        } else {\r\n            return point;\r\n        }\r\n    }\r\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/attributionModel.html":{"url":"classes/attributionModel.html","title":"class - attributionModel","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  attributionModel\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            models/attributionModel.ts\n        \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(options: any)\n                                \n                            \n                                \n                                    \n                                        Defined in models/attributionModel.ts:1\n                                    \n                                \n            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                     position\n                                \n                            \n                            \n                                \n                                    position:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: bottomright\n                                    \n                                \n                                \n                                    \n                                        Defined in models/attributionModel.ts:12\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     prefix\n                                \n                            \n                            \n                                \n                                    prefix:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: Leaflet\n                                    \n                                \n                                \n                                    \n                                        Defined in models/attributionModel.ts:11\n                                    \n                                \n                        \n                    \n            \n    \n    \n        export class attributionModel {\r\n    constructor(options: any) {\r\n        if (options !== null) {\r\n            for (var key in options) {\r\n                if (options[key] !== undefined) {\r\n                    this[key] = options[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    prefix: string = \"Leaflet\";\t//The HTML text shown before the attributions. Pass false to disable.\r\n    position: string = \"bottomright\"  //The position of the control (one of the map corners). Possible values are 'topleft', 'topright', 'bottomleft' or 'bottomright'\r\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/path.html":{"url":"classes/path.html","title":"class - path","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  path\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            models/path.ts\n        \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(pathInfo: any)\n                                \n                            \n                                \n                                    \n                                        Defined in models/path.ts:1\n                                    \n                                \n            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                     className\n                                \n                            \n                            \n                                \n                                    className:     string\n            \n                                \n                            \n                                \n                                    \n                                        Defined in models/path.ts:24\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     color\n                                \n                            \n                            \n                                \n                                    color:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: #3388ff\n                                    \n                                \n                                \n                                    \n                                        Defined in models/path.ts:12\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     dashArray\n                                \n                            \n                            \n                                \n                                    dashArray:     string\n            \n                                \n                            \n                                \n                                    \n                                        Defined in models/path.ts:17\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     dashOffset\n                                \n                            \n                            \n                                \n                                    dashOffset:     string\n            \n                                \n                            \n                                \n                                    \n                                        Defined in models/path.ts:18\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fill\n                                \n                            \n                            \n                                \n                                    fill:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: true\n                                    \n                                \n                                \n                                    \n                                        Defined in models/path.ts:19\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fillColor\n                                \n                            \n                            \n                                \n                                    fillColor:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: #3388ff\n                                    \n                                \n                                \n                                    \n                                        Defined in models/path.ts:20\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fillOpacity\n                                \n                            \n                            \n                                \n                                    fillOpacity:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 0.2\n                                    \n                                \n                                \n                                    \n                                        Defined in models/path.ts:21\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fillRule\n                                \n                            \n                            \n                                \n                                    fillRule:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: evenodd\n                                    \n                                \n                                \n                                    \n                                        Defined in models/path.ts:22\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     lineCap\n                                \n                            \n                            \n                                \n                                    lineCap:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: round\n                                    \n                                \n                                \n                                    \n                                        Defined in models/path.ts:15\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     lineJoin\n                                \n                            \n                            \n                                \n                                    lineJoin:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: round\n                                    \n                                \n                                \n                                    \n                                        Defined in models/path.ts:16\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     opacity\n                                \n                            \n                            \n                                \n                                    opacity:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 1\n                                    \n                                \n                                \n                                    \n                                        Defined in models/path.ts:14\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     stroke\n                                \n                            \n                            \n                                \n                                    stroke:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: true\n                                    \n                                \n                                \n                                    \n                                        Defined in models/path.ts:11\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     weight\n                                \n                            \n                            \n                                \n                                    weight:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 3\n                                    \n                                \n                                \n                                    \n                                        Defined in models/path.ts:13\n                                    \n                                \n                        \n                    \n            \n    \n    \n        export class path {\r\n    constructor(pathInfo: any) {\r\n        if (pathInfo !== null) {\r\n            for (var key in pathInfo) {\r\n                if (pathInfo[key] !== undefined) {\r\n                    this[key] = pathInfo[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    stroke: boolean = true;\t//Whether to draw stroke along the path. Set it to false to disable borders on polygons or circles.\r\n    color: string = '#3388ff';\t//Stroke color\r\n    weight: number = 3;\t//Stroke width in pixels\r\n    opacity: number = 1;\t//Stroke opacity\r\n    lineCap: string = 'round'; //\tA string that defines shape to be used at the end of the stroke.\r\n    lineJoin: string = 'round'; //A string that defines shape to be used at the corners of the stroke.\r\n    dashArray: string = null;\t//A string that defines the stroke dash pattern. Doesn't work on Canvas-powered layers in some old browsers.\r\n    dashOffset: string = null;\t//A string that defines the distance into the dash pattern to start the dash. Doesn't work on Canvas-powered layers in some old browsers.\r\n    fill: boolean = true; //Whether to fill the path with color. Set it to false to disable filling on polygons or circles.\r\n    fillColor: string = '#3388ff';\t//Fill color. Defaults to the value of the color option\r\n    fillOpacity: number = 0.2;\t//\tFill opacity.\r\n    fillRule: string = 'evenodd';\t//\tA string that defines how the inside of a shape is determined.\r\n    //TODO renderer: Renderer; \t\tUse this specific instance of Renderer for this path. Takes precedence over the map's default renderer.\r\n    className: string = null;\t//null\tCustom class name set on an element. Only for SVG renderer.\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/polygon.html":{"url":"classes/polygon.html","title":"class - polygon","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  polygon\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            models/polygon.ts\n        \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(_outerRing: any, _hole: any)\n                                \n                            \n                                \n                                    \n                                        Defined in models/polygon.ts:3\n                                    \n                                \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     getPolygonWithoutHoles\n                                \n                            \n                            \n                                \n            getPolygonWithoutHoles()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in models/polygon.ts:14\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getPolygonWithHoles\n                                \n                            \n                            \n                                \n            getPolygonWithHoles()\n                                \n                            \n            \n                                \n                                    \n                                        Defined in models/polygon.ts:18\n                                    \n                                \n            \n                            \n                                \n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Public hole\n                                \n                            \n                            \n                                \n                                    hole:     number[][]\n            \n                                \n                            \n                                \n                                    \n                                        Defined in models/polygon.ts:3\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public outerRing\n                                \n                            \n                            \n                                \n                                    outerRing:     number[][]\n            \n                                \n                            \n                                \n                                    \n                                        Defined in models/polygon.ts:2\n                                    \n                                \n                        \n                    \n            \n    \n    \n        export class polygon {\r\n    public outerRing: Array>;\r\n    public hole: Array>;\r\n\r\n    constructor(_outerRing, _hole) {\r\n        if (_outerRing) {\r\n            this.outerRing = _outerRing;\r\n            if (_hole) {\r\n                this.hole = _hole;\r\n            }\r\n        }\r\n    }\r\n\r\n    getPolygonWithoutHoles() {\r\n        return this.outerRing;\r\n    }\r\n\r\n    getPolygonWithHoles() {\r\n        let polygon = [];\r\n        polygon.push(this.outerRing);\r\n        polygon.push(this.hole);\r\n        return polygon;\r\n    }\r\n\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/scaleModel.html":{"url":"classes/scaleModel.html","title":"class - scaleModel","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  scaleModel\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            models/scaleModel.ts\n        \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(options: any)\n                                \n                            \n                                \n                                    \n                                        Defined in models/scaleModel.ts:1\n                                    \n                                \n            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                     imperial\n                                \n                            \n                            \n                                \n                                    imperial:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: true\n                                    \n                                \n                                \n                                    \n                                        Defined in models/scaleModel.ts:13\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     maxWidth\n                                \n                            \n                            \n                                \n                                    maxWidth:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 100\n                                    \n                                \n                                \n                                    \n                                        Defined in models/scaleModel.ts:11\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     metric\n                                \n                            \n                            \n                                \n                                    metric:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: true\n                                    \n                                \n                                \n                                    \n                                        Defined in models/scaleModel.ts:12\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     position\n                                \n                            \n                            \n                                \n                                    position:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: bottomleft\n                                    \n                                \n                                \n                                    \n                                        Defined in models/scaleModel.ts:15\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateWhenIdle\n                                \n                            \n                            \n                                \n                                    updateWhenIdle:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: true\n                                    \n                                \n                                \n                                    \n                                        Defined in models/scaleModel.ts:14\n                                    \n                                \n                        \n                    \n            \n    \n    \n        export class scaleModel {\r\n    constructor(options: any) {\r\n        if (options !== null) {\r\n            for (var key in options) {\r\n                if (options[key] !== undefined) {\r\n                    this[key] = options[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    maxWidth: number = 100;\t//Maximum width of the control in pixels. The width is set dynamically to show round values (e.g. 100, 200, 500).\r\n    metric: boolean = true;\t//Whether to show the metric scale line (m/km).\r\n    imperial: boolean = true;\t//Whether to show the imperial scale line (mi/ft).\r\n    updateWhenIdle: boolean = true;\t//If true, the control is updated on moveend, otherwise it's always up-to-date (updated on move).\r\n    position: string = \"bottomleft\"  //The position of the control (one of the map corners). Possible values are 'topleft', 'topright', 'bottomleft' or 'bottomright'\r\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/zoomModel.html":{"url":"classes/zoomModel.html","title":"class - zoomModel","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  zoomModel\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            models/zoomModel.ts\n        \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(options: any)\n                                \n                            \n                                \n                                    \n                                        Defined in models/zoomModel.ts:1\n                                    \n                                \n            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                     position\n                                \n                            \n                            \n                                \n                                    position:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: topright\n                                    \n                                \n                                \n                                    \n                                        Defined in models/zoomModel.ts:15\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     zoomInText\n                                \n                            \n                            \n                                \n                                    zoomInText:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: +\n                                    \n                                \n                                \n                                    \n                                        Defined in models/zoomModel.ts:11\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     zoomInTitle\n                                \n                            \n                            \n                                \n                                    zoomInTitle:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: Zoom in\n                                    \n                                \n                                \n                                    \n                                        Defined in models/zoomModel.ts:12\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     zoomOutText\n                                \n                            \n                            \n                                \n                                    zoomOutText:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: -\n                                    \n                                \n                                \n                                    \n                                        Defined in models/zoomModel.ts:13\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     zoomOutTitle\n                                \n                            \n                            \n                                \n                                    zoomOutTitle:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: Zoom out\n                                    \n                                \n                                \n                                    \n                                        Defined in models/zoomModel.ts:14\n                                    \n                                \n                        \n                    \n            \n    \n    \n        export class zoomModel {\r\n    constructor(options: any) {\r\n        if (options !== null) {\r\n            for (var key in options) {\r\n                if (options[key] !== undefined) {\r\n                    this[key] = options[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    zoomInText: string = \"+\";\t//The text set on the 'zoom in' button.\r\n    zoomInTitle: string = \"Zoom in\";\t//The title set on the 'zoom in' button.\r\n    zoomOutText: string = \"-\";\t//The text set on the 'zoom out' button.\r\n    zoomOutTitle: string = \"Zoom out\";\t//The title set on the 'zoom out' button.\r\n    position: string = \"topright\"  //The position of the control (one of the map corners). Possible values are 'topleft', 'topright', 'bottomleft' or 'bottomright'\r\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ipath.html":{"url":"interfaces/Ipath.html","title":"interface - Ipath","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Ipath\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            interfaces/path.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                \n                                    \n                                        Defined in interfaces/path.ts:13\n                                    \n                                \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                \n                                    \n                                        Defined in interfaces/path.ts:3\n                                    \n                                \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        dashArray\n                                    \n                                \n                                \n                                    \n                                        dashArray:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                \n                                    \n                                        Defined in interfaces/path.ts:7\n                                    \n                                \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        dashOffset\n                                    \n                                \n                                \n                                    \n                                        dashOffset:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                \n                                    \n                                        Defined in interfaces/path.ts:8\n                                    \n                                \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        fill\n                                    \n                                \n                                \n                                    \n                                        fill:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                \n                                    \n                                        Defined in interfaces/path.ts:9\n                                    \n                                \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                \n                                    \n                                        Defined in interfaces/path.ts:10\n                                    \n                                \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                \n                                    \n                                        Defined in interfaces/path.ts:11\n                                    \n                                \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        fillRule\n                                    \n                                \n                                \n                                    \n                                        fillRule:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                \n                                    \n                                        Defined in interfaces/path.ts:12\n                                    \n                                \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        lineJoin\n                                    \n                                \n                                \n                                    \n                                        lineJoin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                \n                                    \n                                        Defined in interfaces/path.ts:6\n                                    \n                                \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        opacity\n                                    \n                                \n                                \n                                    \n                                        opacity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                \n                                    \n                                        Defined in interfaces/path.ts:5\n                                    \n                                \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        stroke\n                                    \n                                \n                                \n                                    \n                                        stroke:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                \n                                    \n                                        Defined in interfaces/path.ts:2\n                                    \n                                \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        weight\n                                    \n                                \n                                \n                                    \n                                        weight:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                \n                                    \n                                        Defined in interfaces/path.ts:4\n                                    \n                                \n\n                        \n                    \n            \n    \n    \n        export interface Ipath {\r\n    stroke: boolean;\r\n    color: string;\r\n    weight: number;\r\n    opacity: number;\r\n    lineJoin: string;\r\n    dashArray: string;\r\n    dashOffset: string;\r\n    fill: boolean;\r\n    fillColor: string;\r\n    fillOpacity: number;\r\n    fillRule: string;\r\n    className: string;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    Variables\n        index.ts\n        \n                    \n                    \n                        \n                            \n                                 CandTLeafletComponent\n                            \n                        \n                        \n                            \n                                CandTLeafletComponent:     \n        \n                            \n                        \n                    \n                \n                \n                    \n                        \n                            \n                                 CandTLeafletService\n                            \n                        \n                        \n                            \n                                CandTLeafletService:     \n        \n                            \n                        \n                    \n                \n        \n        test/main.test.ts\n        \n                    \n                    \n                        \n                            \n                                 ___karma__\n                            \n                        \n                        \n                            \n                                ___karma__:     any\n        \n                            \n                        \n                    \n                \n                \n                    \n                        \n                            \n                                 require\n                            \n                        \n                        \n                            \n                                require:     any\n        \n                            \n                        \n                    \n                \n                \n                    \n                        \n                            \n                                 System\n                            \n                        \n                        \n                            \n                                System:     any\n        \n                            \n                        \n                    \n                \n        \n\n    Functions\n        test/mock.component.ts\n        \n                    \n                    \n                        \n                            \n                                 MockComponent\n                            \n                        \n                        \n                            \n        MockComponent(options: undefined)\n                            \n                        \n        \n        \n                    \n                \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                circle/circle.ts\n            \n            \n                component\n            \n            \n                CircleElement\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                circlemarker/circlemarker.ts\n            \n            \n                component\n            \n            \n                CircleMarkerElement\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                geojson/geojson.ts\n            \n            \n                component\n            \n            \n                GeoJsonElement\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                group/group.ts\n            \n            \n                component\n            \n            \n                LeafletGroup\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                helpers/coodinateHandler.ts\n            \n            \n                class\n            \n            \n                CoordinateHandler\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                helpers/geoJsonReader.ts\n            \n            \n                class\n            \n            \n                GeoJSONCoordinateHandler\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                imageoverlay/image-overlay.ts\n            \n            \n                component\n            \n            \n                ImageOverlayElement\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                interfaces/path.ts\n            \n            \n                interface\n            \n            \n                Ipath\n            \n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                layer/layer.ts\n            \n            \n                component\n            \n            \n                LayerElement\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                map/attribution/attribution.ts\n            \n            \n                component\n            \n            \n                AttributionControl\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                map/map.ts\n            \n            \n                component\n            \n            \n                LeafletElement\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                map/scale/scale.ts\n            \n            \n                component\n            \n            \n                ScaleControl\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                map/watermark/watermark.ts\n            \n            \n                component\n            \n            \n                WatermarkComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                map/zoom/zoom.ts\n            \n            \n                component\n            \n            \n                ZoomControl\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                marker/marker.ts\n            \n            \n                component\n            \n            \n                MarkerElement\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                models/attributionModel.ts\n            \n            \n                class\n            \n            \n                attributionModel\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                models/path.ts\n            \n            \n                class\n            \n            \n                path\n            \n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                models/polygon.ts\n            \n            \n                class\n            \n            \n                polygon\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                models/scaleModel.ts\n            \n            \n                class\n            \n            \n                scaleModel\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                models/zoomModel.ts\n            \n            \n                class\n            \n            \n                zoomModel\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                polygon/polygon.ts\n            \n            \n                component\n            \n            \n                PolygonElement\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                polyline/polyline.ts\n            \n            \n                component\n            \n            \n                PolylineElement\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                popup/popup.ts\n            \n            \n                component\n            \n            \n                PopupElement\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                services/globalId.service.ts\n            \n            \n                injectable\n            \n            \n                GuidService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                services/group.service.ts\n            \n            \n                injectable\n            \n            \n                GroupService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                services/helper.service.ts\n            \n            \n                injectable\n            \n            \n                HelperService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                services/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                services/popup.service.ts\n            \n            \n                injectable\n            \n            \n                PopupService\n            \n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
